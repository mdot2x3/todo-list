* {
  box-sizing: border-box;
  margin: 0;
}

body {
  background-color: rebeccapurple;
  /* ensure the page is at least the full viewport */
  min-height: 100vh;
  /* allow scrolling */
  overflow-y: auto;
}

nav ul {
  display: grid;
  grid-template-columns: 150px 150px 150px;
  justify-content: center;
  text-align: center;
  padding: 0;
  list-style-type: none;
}

#content {
  display: grid;
  grid-template-columns: repeat(auto-fill, 200px);
  justify-content: center;
  gap: 10px;
}

#addProjectDiv {
  display: grid;
  justify-content: center;
  padding: 25px;
}

#addProjectDialog {
  position: absolute;
  top: 35%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.projectCard {
  display: flex;
  flex-direction: column;
  gap: 5px;
  width: 200px;
  padding: 10px;
  background: white;
  border: 2px solid lawngreen;
  border-radius: 8px;
  /* needed for delete button positioning */
  position: relative;
  /* prevents card size expanding */
  overflow: hidden;
  /* expanded card styling properties */
  transition: transform 0.3s ease-in-out, width 0.3s ease-in-out, height 0.3s ease-in-out;
  cursor: pointer;
}

/* ensure text inside the card is left-aligned and 
does not stretch beyond its container */
.projectCard h3,
.projectCard p {
  margin: 0;
  text-align: left;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

/* header section (title + delete button) */
.projectCardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  /* make sure header stays fixed on card expansion */
  padding-bottom: 10px;
  position: sticky;
  top: 0;
  z-index: 5;
}

/* prevent overlap of title with delete button */
.projectCardHeader h3 {
  max-width: 80%; 
}

/* style the delete button */
#deleteProject {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0px;
  right: -3px;
  background: red;
  color: white;
  border: none;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  line-height: 0;
}

#deleteProject:hover {
  background: darkred;
}

/* modal-like background effect */
.modalOpen::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.5);
  z-index: 5;
}

.modalOpen {
  /* disable clicks on everything, inside and outside the card (reenabled specifically in .expanded below) */
  pointer-events: none;
}

.projectCard.expanded {
  display: flex;
  flex-direction: column;
  position: absolute;
  /* buffer card start from viewport top edge */
  top: 10vh;
  left: 50%;
  /* centers the card horizontally(-50%) but prevents vertical centering(0%) so it grows downward with the content */
  transform: translate(-50%, 0%);
  height: auto;
  width: 60vw;
  max-width: 500px;
  z-index: 10;
  background: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  /* enable clicks on the expanded card */
  pointer-events: auto;
}

/* OVERRIDE: prevent text truncation on expanded card*/
.projectCard.expanded h3,
.projectCard.expanded p {
  /* allows text wrapping */
  white-space: normal;
  /* ensures the text isn't cut off */
  overflow: visible;
  /* no ellipsis */
  text-overflow: clip;
  /* ensures long words don't overflow */
  word-wrap: break-word;
}

.projectCardPlaceholder {
  /* keeps the space but hides the element */
  visibility: hidden;
  background: transparent;
  border: none;
}

/* style the minimize button */
#minimizeProject {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0px;
  right: 24px;
  background: darkgrey;
  color: white;
  border: none;
  border-radius: 25%;
  width: 24px;
  height: 24px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  line-height: 0;
}

#minimizeProject:hover {
  background: grey;
}

/* hide minimize button */
#minimizeProject.hidden {
  display: none;
}

.taskSection {
  display: flex;
  flex-direction: column;
  gap: 10px;
  padding-top: 10px;
}

#addTaskButton {
  background: dodgerblue;
  color: white;
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
}

#addTaskButton:hover {
  background: royalblue;
}

/* hide task section */
.taskSection.hidden {
  display: none;
}

#addTaskDialog {
  position: absolute;
  top: 35%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  /* enable clicks on the new dialog box */
  pointer-events: auto;
}

.unassignedTasks.hidden {
  display: none;
}

.taskListContainer.hidden {
  display: none;
}

.taskListInputDiv.hidden {
  display: none;
}

/* ---(with above) all task list css settings--- */
/* style all task list titles */
.taskList h5 {
  font-size: 25px;
}

.taskListHeader {
  display: flex;
  align-items: center;
  cursor: pointer;
  margin-bottom: 0.25rem;
  gap: 0.5rem;
}

/* rotate arrow down when expanded (specifically for task list arrow) */
.taskList.expanded .taskListHeader .taskArrow {
  transform: rotate(90deg);
}

.taskListItems.hidden {
  display: none;
}

/* ---all task item css settings--- */
/* entire task li gets the priority color as background, except checkbox area */
.taskItem {
  display: flex;
  align-items: flex-start;
  margin-bottom: 8px;
  list-style: none;
  border-radius: 4px;
  margin: 8px 0;
  overflow: hidden;
  transition: all 0.3s ease;
}

/* priority background for each task li */
.taskItem[data-priority="low"] .taskHeader    { background-color: #d0e7ff; }
.taskItem[data-priority="medium"] .taskHeader { background-color: #fff3b0; }
.taskItem[data-priority="high"] .taskHeader   { background-color: #ffd8a8; }
.taskItem[data-priority="urgent"] .taskHeader { background-color: #ffb0b0; }

/* header (title) stays fixed, clickable to expand */
.taskHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 6px 12px;
  font-weight: bold;
  cursor: pointer;
  background-color: var(--priority-color);
  border-radius: 4px;
}

.taskArrow {
  display: inline-block;
  transition: transform 0.3s ease;
}

/* rotate arrow down when expanded */
.taskItem.expanded .taskHeader .taskArrow {
  transform: rotate(90deg);
}

/* details drawer hidden by default */
.taskDetails {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  background-color: white;
  padding: 8px 12px;
  transition: all 0.3s ease;
  display: none;
}

/* expanded state reveals the drawer */
.taskItem.expanded .taskDetails {
  /* adjust max-height depending on content */
  display: block;
  max-height: 300px;
  opacity: 1;
  padding: 10px 15px;
}

/* ---settings for checkbox--- */

.taskCheckbox {
  margin-right: 10px;
  margin-top: 6px;
  flex-shrink: 0;
  cursor: pointer;
}

.taskContent {
  flex-grow: 1;
  width: 100%;
}

.taskItem.completed .taskHeader {
  text-decoration: line-through;
  opacity: 0.6;
}

.taskItem.completed .taskDetails {
  opacity: 0.6;
}
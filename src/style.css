* {
  box-sizing: border-box;
  margin: 0;
}

body {
  margin: 0;
  font-family: 'Inter', sans-serif;
  /* deep space blue-violet gradient base */
  background: #0f0c29;
  background: linear-gradient(135deg, #0f0c29, #302b63, #24243e);
  color: #f3f4f6;
  /* ensure the page is at least the full viewport */
  min-height: 100vh;
  /* allow scrolling */
  overflow-y: auto;
}

/* === navigation === */
header {
  background: #1e1b34;
  padding: 1rem;
  text-align: center;
  border-bottom: 1px solid #3a3a52;
}
nav ul {
  list-style: none;
  display: flex;
  justify-content: center;
  gap: 2rem;
  padding: 0;
  margin: 0;
}
nav li {
  cursor: pointer;
  color: #a78bfa;
  font-weight: 600;
  transition: color 0.3s ease;
}
nav li:hover {
  color: #f472b6;
}
nav li.selected {
  color: #f472b6;
  border-bottom: 2px solid #f472b6;
}

/* === main container === */
.mainContainer {
  padding: 2rem;
  max-width: 1200px;
  margin: auto;
}

/* === project grid === */
.projectGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, 200px);
  justify-content: center;
  gap: 10px;
}

#addProjectDiv {
  display: grid;
  justify-content: center;
  padding: 25px;
}

/* center dialog boxes on window, replaces former #addProjectDialog, #addTaskDialog, and #editTaskDialog */
dialog {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  margin: 0;
  padding: 2rem;
  max-width: 500px;
  color: #f3f4f6;
  border-radius: 12px;
  background: rgba(30, 27, 52, 0.85);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(167, 139, 250, 0.2);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
  animation: fadeIn 0.3s ease;
  z-index: 1000;
  max-height: 90vh;
  overflow-y: auto;
  pointer-events: auto;
}

/* === project card === */
.projectCard {
  background: #1e1b34;
  border: 1px solid #3a3a52;
  border-radius: 12px;
  padding: 1rem;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  box-shadow: 0 8px 16px rgba(0,0,0,0.2);
  cursor: pointer;
}
.projectCard:hover {
  transform: translateY(-3px);
  box-shadow: 0 12px 24px rgba(0,0,0,0.3);
}
.projectCard h3 {
  font-size: 1.2rem;
  color: #a78bfa;
}
.projectCard p {
  font-size: 0.90rem;
  padding: 3px;
}
.projectCardBody strong {
  color: #f472b6;
}
/* ensure text inside the card is left-aligned and 
does not stretch beyond its container */
.projectCard h3,
.projectCard p {
  margin: 0;
  text-align: left;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

/* === buttons === */
#openAddProject {
  background: #a78bfa;
  color: #fff;
  border: none;
  padding: 0.6rem 1.2rem;
  border-radius: 6px;
  font-size: 1.1rem;
  cursor: pointer;
  transition: background 0.3s ease;
}
#openAddProject:hover {
  background: #c084fc;
}

/* === delete button on cards === */
#deleteProject {
  float: right;
  background: transparent;
  border: none;
  color: #f87171;
  font-size: 1rem;
  cursor: pointer;
  transition: transform 0.2s ease;
}
#deleteProject:hover {
  transform: scale(1.3);
  color: #ef4444;
}

/* header section (title + delete button) */
.projectCardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  /* make sure header stays fixed on card expansion */
  padding-bottom: 10px;
  position: sticky;
  top: 0;
  z-index: 5;
}

/* prevent overlap of title with delete button */
.projectCardHeader h3 {
  max-width: 80%; 
}

/* === modal form layout === */
dialog form {
  display: flex;
  flex-direction: column;
}
dialog label {
  font-weight: 600;
  font-size: 0.95rem;
  color: #a78bfa;
}
dialog input, dialog textarea, dialog select {
  padding: 0.6rem 1rem;
  background: #2a2645;
  border: 1px solid #3a3a52;
  border-radius: 8px;
  color: #f3f4f6;
  font-size: 1rem;
  transition: border-color 0.3s;
}
dialog input:focus, dialog textarea:focus, dialog select:focus {
  border-color: #c084fc;
  outline: none;
}

/* === modal buttons === */
dialog .buttonDiv {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 2rem;
}
dialog button {
  padding: 0.5rem 1rem;
  border-radius: 6px;
  border: none;
  cursor: pointer;
  font-weight: 600;
  font-size: 1rem;
}
#closeAddProject, #closeAddTask, #closeEditTask {
  background: #3a3a52;
  color: #f3f4f6;
}
#submitAddProject, #submitAddTask, #submitEditTask {
  background: #a78bfa;
  color: #fff;
}
#submitAddProject:hover, #submitAddTask:hover, #submitEditTask:hover {
  background: #c084fc;
}

/* === modal-like background effect === */
.modalOpen::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.5);
  z-index: 5;
}
.modalOpen {
  /* disable clicks on everything, inside and outside the card (reenabled specifically in .expanded below) */
  pointer-events: none;
}
.modalOpen #editTaskDialog {
  pointer-events: auto;
  /* above modal overlay and project card */
  z-index: 15;
}

.projectCard.expanded {
  display: flex;
  flex-direction: column;
  position: absolute;
  /* buffer card start from viewport top edge */
  top: 10vh;
  left: 50%;
  /* centers the card horizontally(-50%) but prevents vertical centering(0%) so it grows downward with the content */
  transform: translate(-50%, 0%);
  height: auto;
  width: 60vw;
  max-width: 500px;
  z-index: 10;
  background: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  /* enable clicks on the expanded card */
  pointer-events: auto;
  /* animation transition from bottom-up */
  transform-origin: center top;
  animation: slideUpFade 0.3s ease-out;
}
@keyframes slideUpFade {
  from {
    transform: translate(-50%, 20%);
    opacity: 0;
  }
  to {
    transform: translate(-50%, 0%);
    opacity: 1;
  }
}

.projectCard.shrinking {
  animation: slideDownFade 250ms ease-in forwards;
  pointer-events: none;
}
/* animation transition for shrinking project card top-down */
@keyframes slideDownFade {
  0% {
    transform: scale(1) translate(-50%, 0%);
    opacity: 1;
  }
  100% {
    transform: scale(1) translate(-50%, 50%);
    opacity: 0;
  }
}

/* OVERRIDE: prevent text truncation on expanded card*/
.projectCard.expanded h3,
.projectCard.expanded p {
  /* allows text wrapping */
  white-space: normal;
  /* ensures the text isn't cut off */
  overflow: visible;
  /* no ellipsis */
  text-overflow: clip;
  /* ensures long words don't overflow */
  word-wrap: break-word;
}

.projectCardPlaceholder {
  /* keeps the space but hides the element */
  visibility: hidden;
  background: transparent;
  border: none;
}

/* === style the minimize button === */
#minimizeProject {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0px;
  right: 24px;
  background: darkgrey;
  color: white;
  border: none;
  border-radius: 25%;
  width: 24px;
  height: 24px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  line-height: 0;
}
#minimizeProject:hover {
  background: grey;
}
/* hide minimize button */
#minimizeProject.hidden {
  display: none;
}

/* === task related settings === */
.taskSection {
  display: flex;
  flex-direction: column;
  gap: 10px;
  padding-top: 10px;
}
/* remove automatic indent on li items */
.taskSection ul {
  margin: 0px;
  padding: 0px;
}
#addTaskButton {
  background: dodgerblue;
  color: white;
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
}
#addTaskButton:hover {
  background: royalblue;
}
/* hide task section */
.taskSection.hidden {
  display: none;
}

/* === add cog settings icon to task details section === */
.taskDetails {
  /* key point: this makes the child .settingsIcon absolute positioning relative to this specific div */
  position: relative;
}
.taskDetails p {
  padding-right: 1em;
}
.settingsIcon {
  position: absolute;
  top: 0.5em;
  right: 0.5em;
  cursor: pointer;
  font-size: 1.2em;
  color: #888;
  transition: color 0.3s ease;
}
.settingsIcon:hover {
  color: #333;
}

/* === control task list select dropdown bar size === */
#taskListSelection {
  max-width: 100%;
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  display: inline-block;
}

.unassignedTasks.hidden {
  display: none;
}

.taskListContainer.hidden {
  display: none;
}

.taskListInputDiv.hidden {
  display: none;
}

/* === style the new list input line inside "+ New Task" modal === */
.taskListInputDiv {
  margin-top: 0.5rem;
  display: flex;
  gap: 0.5rem;
}
.taskListInputDiv input {
  flex-grow: 1;
  background: #2a2645;
  color: #fff;
  border: 1px solid #555;
  border-radius: 6px;
  padding: 0.5rem 0.75rem;
}
.taskListInputDiv button {
  background: #10b981;
  color: #fff;
  border: none;
  border-radius: 6px;
  padding: 0.5rem 0.75rem;
  font-weight: bold;
}

/* === (with above) all task list css settings === */
.taskListHeader {
  display: flex;
  /* align all children to the top */
  align-items: flex-start;
  gap: 5px;
  width: 100%;
  cursor: pointer;
}
/* style all task list titles */
.taskListHeader h5 {
  font-size: 25px;
  /* create ellipsis for long titles */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
/* when expanded, allow wrapping */
.taskList.expanded .taskListHeader h5 {
  white-space: normal;
  overflow: visible;
  text-overflow: unset;
  word-wrap: break-word;
}
/* adjust task list arrow to align with title */
.taskListHeader .taskArrow {
  align-self: start;
}
/* rotate arrow down when expanded (specifically for task list arrow) */
.taskList.expanded .taskListHeader .taskArrow {
  transform: rotate(90deg);
}
/* align tasks within task lists under the arrow */
.taskSection .taskListItems {
  padding-left: 27px;
}
.taskListItems.hidden {
  display: none;
}

/* === settings for task list delete button === */
.deleteTaskListButton {
  background: red;
  color: white;
  border: none;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  margin-top: 2px;
  margin-right: 6px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  line-height: 0;
}
.deleteTaskListButton:hover {
  background: darkred;
}

/* === settings for task progress counter === */
.taskProgressCounter {
  margin-top: 8px;
  margin-left: auto;
  font-size: 0.85em;
  color: #555;
}

/* === all task item css settings === */
/* entire task li gets the priority color as background, except checkbox area */
.taskItem {
  display: flex;
  align-items: flex-start;
  margin-bottom: 8px;
  list-style: none;
  border-radius: 4px;
  margin: 8px 0;
  overflow: hidden;
  transition: all 0.3s ease;
}
/* priority background for each task li */
.taskItem[data-priority="low"] .taskHeader    { background-color: #d0e7ff; }
.taskItem[data-priority="medium"] .taskHeader { background-color: #fff3b0; }
.taskItem[data-priority="high"] .taskHeader   { background-color: #ffd8a8; }
.taskItem[data-priority="urgent"] .taskHeader { background-color: #ffb0b0; }

/* header (title) stays fixed, clickable to expand */
.taskHeader {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: start;
  gap: 10px;
  padding: 6px 12px;
  font-weight: bold;
  cursor: pointer;
  background-color: var(--priority-color);
  border-radius: 4px;
  position: relative;
}
.taskTitle {
  /* create ellipsis for long titles */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  /* ensures long unbroken text wraps */
  overflow-wrap: break-word;
  /* breaks long words if needed */
  word-break: break-word;
}
/* when expanded, allow wrapping but don’t shift the arrow */
.taskItem.expanded .taskHeader {
  align-items: start;
}
/* when the task is expanded, remove ellipsis and allow wrapping */
.taskItem.expanded .taskTitle {
  white-space: normal;
  overflow: visible;
  text-overflow: unset;
  word-wrap: break-word;
}

/* === task arrow settings === */
.taskArrow {
  align-self: start;
  font-size: 16px;
  min-width: 16px;
  text-align: center;
  margin-top: 2px;
  transition: transform 0.3s ease;
}
/* rotate arrow down when expanded */
.taskItem.expanded .taskHeader .taskArrow {
  transform: rotate(90deg);
}

/* === details drawer settings === */
/* details drawer hidden by default */
.taskDetails {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  background-color: white;
  padding: 8px 12px;
  transition: all 0.3s ease;
  display: none;
}
/* expanded state reveals the drawer */
.taskItem.expanded .taskDetails {
  /* adjust max-height depending on content */
  display: block;
  /* remove the height limit of the section */
  max-height: none;
  opacity: 1;
  padding: 10px 15px;
  /* ensures long unbroken text wraps */
  overflow-wrap: break-word;
  /* breaks long words if needed */
  word-break: break-word;
}

/* === settings for task checkbox === */
.taskCheckbox {
  margin-right: 10px;
  margin-top: 6px;
  flex-shrink: 0;
  cursor: pointer;
}
.taskContent {
  flex-grow: 1;
  width: 100%;
}
.taskItem.completed .taskHeader {
  text-decoration: line-through;
  opacity: 0.6;
}
.taskItem.completed .taskDetails {
  opacity: 0.6;
}

/* === settings for task delete button === */
.deleteTaskButton {
  background: red;
  color: white;
  border: none;
  border-radius: 50%;
  width: 22px;
  height: 20px;
  margin-top: 2px;
  margin-right: 10px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  line-height: 0;
}
.deleteTaskButton:hover {
  background: darkred;
}

/* === welcome modal === */
#welcomeModal {
  position: fixed;
  top: 25%;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(20, 18, 38, 0.92);
  backdrop-filter: blur(8px);
  border: 1px solid #3a3a52;
  border-radius: 12px;
  color: #f3f4f6;
  padding: 2rem;
  max-width: 400px;
  box-shadow: 0 0 30px rgba(0,0,0,0.4);
  z-index: 1000;
  animation: fadeIn 0.4s ease;
  text-align: center;
}
.welcomeContent h2 {
  margin-top: 0;
  color: #a78bfa;
}
.welcomeContent p {
  margin: 0.5rem 0;
  font-size: 0.95rem;
  line-height: 1.4;
}

/* === responsive font === */
@media (max-width: 600px) {
  .projectCard {
    font-size: 0.9rem;
  }
}
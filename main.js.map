{"version":3,"file":"main.js","mappings":"uCASAA,EAAOC,QANP,SAAwCC,GACtC,IAAIC,EAAmD,KACnDA,GACFD,EAAaE,aAAa,QAASD,EAEvC,C,SCNA,IAAIE,EAAc,GAClB,SAASC,EAAqBC,GAE5B,IADA,IAAIC,GAAU,EACLC,EAAI,EAAGA,EAAIJ,EAAYK,OAAQD,IACtC,GAAIJ,EAAYI,GAAGF,aAAeA,EAAY,CAC5CC,EAASC,EACT,KACF,CAEF,OAAOD,CACT,CACA,SAASG,EAAaC,EAAMC,GAG1B,IAFA,IAAIC,EAAa,CAAC,EACdC,EAAc,GACTN,EAAI,EAAGA,EAAIG,EAAKF,OAAQD,IAAK,CACpC,IAAIO,EAAOJ,EAAKH,GACZQ,EAAKJ,EAAQK,KAAOF,EAAK,GAAKH,EAAQK,KAAOF,EAAK,GAClDG,EAAQL,EAAWG,IAAO,EAC1BV,EAAa,GAAGa,OAAOH,EAAI,KAAKG,OAAOD,GAC3CL,EAAWG,GAAME,EAAQ,EACzB,IAAIE,EAAoBf,EAAqBC,GACzCe,EAAM,CACRC,IAAKP,EAAK,GACVQ,MAAOR,EAAK,GACZS,UAAWT,EAAK,GAChBU,SAAUV,EAAK,GACfW,MAAOX,EAAK,IAEd,IAA2B,IAAvBK,EACFhB,EAAYgB,GAAmBO,aAC/BvB,EAAYgB,GAAmBQ,QAAQP,OAClC,CACL,IAAIO,EAAUC,EAAgBR,EAAKT,GACnCA,EAAQkB,QAAUtB,EAClBJ,EAAY2B,OAAOvB,EAAG,EAAG,CACvBF,WAAYA,EACZsB,QAASA,EACTD,WAAY,GAEhB,CACAb,EAAYkB,KAAK1B,EACnB,CACA,OAAOQ,CACT,CACA,SAASe,EAAgBR,EAAKT,GAC5B,IAAIqB,EAAMrB,EAAQsB,OAAOtB,GAYzB,OAXAqB,EAAIE,OAAOd,GACG,SAAiBe,GAC7B,GAAIA,EAAQ,CACV,GAAIA,EAAOd,MAAQD,EAAIC,KAAOc,EAAOb,QAAUF,EAAIE,OAASa,EAAOZ,YAAcH,EAAIG,WAAaY,EAAOX,WAAaJ,EAAII,UAAYW,EAAOV,QAAUL,EAAIK,MACzJ,OAEFO,EAAIE,OAAOd,EAAMe,EACnB,MACEH,EAAII,QAER,CAEF,CACAtC,EAAOC,QAAU,SAAUW,EAAMC,GAG/B,IAAI0B,EAAkB5B,EADtBC,EAAOA,GAAQ,GADfC,EAAUA,GAAW,CAAC,GAGtB,OAAO,SAAgB2B,GACrBA,EAAUA,GAAW,GACrB,IAAK,IAAI/B,EAAI,EAAGA,EAAI8B,EAAgB7B,OAAQD,IAAK,CAC/C,IACIgC,EAAQnC,EADKiC,EAAgB9B,IAEjCJ,EAAYoC,GAAOb,YACrB,CAEA,IADA,IAAIc,EAAqB/B,EAAa6B,EAAS3B,GACtC8B,EAAK,EAAGA,EAAKJ,EAAgB7B,OAAQiC,IAAM,CAClD,IACIC,EAAStC,EADKiC,EAAgBI,IAEK,IAAnCtC,EAAYuC,GAAQhB,aACtBvB,EAAYuC,GAAQf,UACpBxB,EAAY2B,OAAOY,EAAQ,GAE/B,CACAL,EAAkBG,CACpB,CACF,C,UCtEA1C,EAAOC,QAVP,SAA2BsB,EAAKrB,GAC9B,GAAIA,EAAa2C,WACf3C,EAAa2C,WAAWC,QAAUvB,MAC7B,CACL,KAAOrB,EAAa6C,YAClB7C,EAAa8C,YAAY9C,EAAa6C,YAExC7C,EAAa+C,YAAYC,SAASC,eAAe5B,GACnD,CACF,C,gECTI6B,E,MAA0B,GAA4B,KAE1DA,EAAwBnB,KAAK,CAACjC,EAAOiB,GAAI,6+hBAmwBrC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6BAA6B,MAAQ,GAAG,SAAW,iwOAAiwO,eAAiB,CAAC,8+hBAA8/hB,WAAa,MAEh3wB,S,UCpwBAjB,EAAOC,QAAU,SAAUoD,GACzB,IAAIzC,EAAO,GA4EX,OAzEAA,EAAK0C,SAAW,WACd,OAAOC,KAAKC,KAAI,SAAUxC,GACxB,IAAIyC,EAAU,GACVC,OAA+B,IAAZ1C,EAAK,GAoB5B,OAnBIA,EAAK,KACPyC,GAAW,cAAcrC,OAAOJ,EAAK,GAAI,QAEvCA,EAAK,KACPyC,GAAW,UAAUrC,OAAOJ,EAAK,GAAI,OAEnC0C,IACFD,GAAW,SAASrC,OAAOJ,EAAK,GAAGN,OAAS,EAAI,IAAIU,OAAOJ,EAAK,IAAM,GAAI,OAE5EyC,GAAWJ,EAAuBrC,GAC9B0C,IACFD,GAAW,KAETzC,EAAK,KACPyC,GAAW,KAETzC,EAAK,KACPyC,GAAW,KAENA,CACT,IAAGE,KAAK,GACV,EAGA/C,EAAKH,EAAI,SAAWmD,EAASpC,EAAOqC,EAAQnC,EAAUC,GAC7B,iBAAZiC,IACTA,EAAU,CAAC,CAAC,KAAMA,OAASE,KAE7B,IAAIC,EAAyB,CAAC,EAC9B,GAAIF,EACF,IAAK,IAAIG,EAAI,EAAGA,EAAIT,KAAK7C,OAAQsD,IAAK,CACpC,IAAI/C,EAAKsC,KAAKS,GAAG,GACP,MAAN/C,IACF8C,EAAuB9C,IAAM,EAEjC,CAEF,IAAK,IAAIgD,EAAK,EAAGA,EAAKL,EAAQlD,OAAQuD,IAAM,CAC1C,IAAIjD,EAAO,GAAGI,OAAOwC,EAAQK,IACzBJ,GAAUE,EAAuB/C,EAAK,WAGrB,IAAVW,SACc,IAAZX,EAAK,KAGdA,EAAK,GAAK,SAASI,OAAOJ,EAAK,GAAGN,OAAS,EAAI,IAAIU,OAAOJ,EAAK,IAAM,GAAI,MAAMI,OAAOJ,EAAK,GAAI,MAF/FA,EAAK,GAAKW,GAMVH,IACGR,EAAK,IAGRA,EAAK,GAAK,UAAUI,OAAOJ,EAAK,GAAI,MAAMI,OAAOJ,EAAK,GAAI,KAC1DA,EAAK,GAAKQ,GAHVR,EAAK,GAAKQ,GAMVE,IACGV,EAAK,IAGRA,EAAK,GAAK,cAAcI,OAAOJ,EAAK,GAAI,OAAOI,OAAOJ,EAAK,GAAI,KAC/DA,EAAK,GAAKU,GAHVV,EAAK,GAAK,GAAGI,OAAOM,IAMxBd,EAAKqB,KAAKjB,GACZ,CACF,EACOJ,CACT,C,UClFAZ,EAAOC,QAAU,SAAUe,GACzB,IAAIyC,EAAUzC,EAAK,GACfkD,EAAalD,EAAK,GACtB,IAAKkD,EACH,OAAOT,EAET,GAAoB,mBAATU,KAAqB,CAC9B,IAAIC,EAASD,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUN,MACzDO,EAAO,+DAA+DrD,OAAOgD,GAC7EM,EAAgB,OAAOtD,OAAOqD,EAAM,OACxC,MAAO,CAAChB,GAASrC,OAAO,CAACsD,IAAgBf,KAAK,KAChD,CACA,MAAO,CAACF,GAASE,KAAK,KACxB,C,UCNA3D,EAAOC,QANP,SAA4BY,GAC1B,IAAI8D,EAAUzB,SAAS0B,cAAc,SAGrC,OAFA/D,EAAQgE,cAAcF,EAAS9D,EAAQiE,YACvCjE,EAAQkE,OAAOJ,EAAS9D,EAAQA,SACzB8D,CACT,C,UCNA,IAAIK,EAAO,CAAC,EA+BZhF,EAAOC,QAPP,SAA0B8E,EAAQE,GAChC,IAAIC,EAtBN,SAAmBA,GACjB,QAA4B,IAAjBF,EAAKE,GAAyB,CACvC,IAAIC,EAAcjC,SAASkC,cAAcF,GAGzC,GAAIG,OAAOC,mBAAqBH,aAAuBE,OAAOC,kBAC5D,IAGEH,EAAcA,EAAYI,gBAAgBC,IAC5C,CAAE,MAAOC,GAEPN,EAAc,IAChB,CAEFH,EAAKE,GAAUC,CACjB,CACA,OAAOH,EAAKE,EACd,CAIeQ,CAAUX,GACvB,IAAKG,EACH,MAAM,IAAIS,MAAM,2GAElBT,EAAOjC,YAAYgC,EACrB,C,UC4BAjF,EAAOC,QAjBP,SAAgBY,GACd,GAAwB,oBAAbqC,SACT,MAAO,CACLd,OAAQ,WAAmB,EAC3BE,OAAQ,WAAmB,GAG/B,IAAIpC,EAAeW,EAAQ+E,mBAAmB/E,GAC9C,MAAO,CACLuB,OAAQ,SAAgBd,IAjD5B,SAAepB,EAAcW,EAASS,GACpC,IAAIC,EAAM,GACND,EAAII,WACNH,GAAO,cAAcH,OAAOE,EAAII,SAAU,QAExCJ,EAAIE,QACND,GAAO,UAAUH,OAAOE,EAAIE,MAAO,OAErC,IAAIkC,OAAiC,IAAdpC,EAAIK,MACvB+B,IACFnC,GAAO,SAASH,OAAOE,EAAIK,MAAMjB,OAAS,EAAI,IAAIU,OAAOE,EAAIK,OAAS,GAAI,OAE5EJ,GAAOD,EAAIC,IACPmC,IACFnC,GAAO,KAELD,EAAIE,QACND,GAAO,KAELD,EAAII,WACNH,GAAO,KAET,IAAIE,EAAYH,EAAIG,UAChBA,GAA6B,oBAAT0C,OACtB5C,GAAO,uDAAuDH,OAAO+C,KAAKE,SAASC,mBAAmBC,KAAKC,UAAU/C,MAAe,QAKtIZ,EAAQgF,kBAAkBtE,EAAKrB,EAAcW,EAAQA,QACvD,CAoBMiF,CAAM5F,EAAcW,EAASS,EAC/B,EACAgB,OAAQ,YArBZ,SAA4BpC,GAE1B,GAAgC,OAA5BA,EAAa6F,WACf,OAAO,EAET7F,EAAa6F,WAAW/C,YAAY9C,EACtC,CAgBM8F,CAAmB9F,EACrB,EAEJ,C,GC1DI+F,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBrC,IAAjBsC,EACH,OAAOA,EAAanG,QAGrB,IAAID,EAASiG,EAAyBE,GAAY,CACjDlF,GAAIkF,EAEJlG,QAAS,CAAC,GAOX,OAHAoG,EAAoBF,GAAUnG,EAAQA,EAAOC,QAASiG,GAG/ClG,EAAOC,OACf,CCrBAiG,EAAoBI,EAAKtG,IACxB,IAAIuG,EAASvG,GAAUA,EAAOwG,WAC7B,IAAOxG,EAAiB,QACxB,IAAM,EAEP,OADAkG,EAAoBO,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdL,EAAoBO,EAAI,CAACxG,EAAS0G,KACjC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAE5G,EAAS2G,IAC5EE,OAAOC,eAAe9G,EAAS2G,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDV,EAAoBW,EAAI,CAACvF,EAAK4F,IAAUJ,OAAOK,UAAUC,eAAeC,KAAK/F,EAAK4F,GCAlFhB,EAAoBoB,QAAKxD,E,yICWrBjD,EAAU,CAAC,EAEfA,EAAQgF,kBAAoB,IAC5BhF,EAAQgE,cAAgB,IACxBhE,EAAQkE,OAAS,SAAc,KAAM,QACrClE,EAAQsB,OAAS,IACjBtB,EAAQ+E,mBAAqB,IAEhB,IAAI,IAAS/E,GAKJ,KAAW,IAAQ0G,QAAS,IAAQA,OCxBnD,MAAMC,EACT,WAAAC,CAAYC,EAAOC,EAAaC,EAASC,GACrCtE,KAAKtC,GAAK6G,OAAOC,aACjBxE,KAAKmE,MAAQA,EACbnE,KAAKoE,YAAcA,EACnBpE,KAAKqE,QAAUA,EACfrE,KAAKsE,SAAWA,EAChBtE,KAAKyE,wBAA0B,GAC/BzE,KAAK0E,wBAA0B,EACnC,CAEA,WAAAC,CAAYC,GACR5E,KAAKyE,wBAAwB/F,KAAKkG,EACtC,CAEA,cAAAC,CAAeC,GAGX9E,KAAKyE,wBAA0BzE,KAAKyE,wBAAwBM,QAAOC,GAAgBA,EAAatH,KAAOoH,GAC3G,CAEA,eAAAG,CAAgBH,GACZ,OAAO9E,KAAKyE,wBAAwBS,MAAKF,GAAgBA,EAAatH,KAAOoH,GACjF,CAEA,WAAAK,CAAYC,GACRpF,KAAK0E,wBAAwBhG,KAAK0G,EACtC,CAEA,cAAAC,CAAeC,GACXtF,KAAK0E,wBAA0B1E,KAAK0E,wBAAwBK,QAAOC,GAAgBA,EAAatH,KAAO4H,GAC3G,CAEA,eAAAC,CAAgBD,GACZ,OAAOtF,KAAK0E,wBAAwBQ,MAAKF,GAAgBA,EAAatH,KAAO4H,GACjF,ECnCG,MAAME,EACT,WAAAtB,CAAYC,EAAOsB,GACfzF,KAAKtC,GAAK6G,OAAOC,aACjBxE,KAAKmE,MAAQA,EACbnE,KAAKyF,UAAYA,EACjBzF,KAAK0F,yBAA2B,EACpC,CAEA,WAAAP,CAAYC,GACRpF,KAAK0F,yBAAyBhH,KAAK0G,EACvC,CAEA,cAAAC,CAAeC,GACXtF,KAAK0F,yBAA2B1F,KAAK0F,yBAAyBX,QAAOC,GAAgBA,EAAatH,KAAO4H,GAC7G,CAEA,eAAAC,CAAgBD,GACZ,OAAOtF,KAAK0F,yBAAyBR,MAAKF,GAAgBA,EAAatH,KAAO4H,GAClF,EClBG,MAAMK,EAGT,WAAAzB,CAAYC,EAAOC,EAAaC,EAASC,EAAUsB,EAAQ,GAAId,EAAa,MAExE9E,KAAKtC,GAAK6G,OAAOC,aACjBxE,KAAKmE,MAAQA,EACbnE,KAAKoE,YAAcA,EACnBpE,KAAKqE,QAAUA,EACfrE,KAAKsE,SAAWA,EAChBtE,KAAK4F,MAAQA,EACb5F,KAAK8E,WAAaA,GAAc,KAChC9E,KAAK6F,UAAW,CACpB,ECTJ,MAAMC,EAAc,iBAEPC,EAAiB,GAGvB,SAASC,IACZ,MAAMC,EAAUjF,KAAKC,UAAU8E,GAC/BG,aAAaC,QAAQL,EAAaG,EACtC,CCZO,SAASG,EAAkBjC,EAAOC,EAAaC,EAASC,EAAUmB,GAErE,MAAMY,EAAa1G,SAASkC,cAAc,YAGpCyE,EAAO3G,SAAS0B,cAAc,OACpCiF,EAAKC,UAAUC,IAAI,eAEnBF,EAAKG,QAAQhB,UAAYA,EAGzB,MAAMiB,EAAgB,IAAIC,KAAKtC,GAASuC,mBAAmB,QAAS,CAChEC,KAAM,UACNC,MAAO,UACPC,IAAK,YAITT,EAAKU,UAAY,8DAEH7C,0MAMDC,oDAC2BsC,mGAEIpC,EAAS2C,oCACvC3C,+bAgBd+B,EAAW3G,YAAY4G,EAC3B,CC3CO,SAASY,EAAe/C,EAAOC,EAAaC,EAASC,EAAUsB,EAAOH,EAAWX,EAAa,MACjG,MAAMqC,EAAc,IAAIxB,EAASxB,EAAOC,EAAaC,EAASC,EAAUsB,EAAOd,GAQ/E,OANIA,ECGD,SAA+BA,EAAYM,GAC9C,IAAK,MAAMgC,KAAWrB,EAAgB,CAElC,MAAMnB,EAAWwC,EAAQnC,gBAAgBH,GACzC,GAAIF,EAKA,OAHAA,EAASO,YAAYC,GACrBY,SACAqB,QAAQC,IAAI,cAAclC,EAASjB,+BAA+BS,EAAST,UAGnF,CAEAkD,QAAQC,IAAI,qBAAqBxC,eACrC,CDhBQyC,CAAsBzC,EAAYqC,GE8BnC,SAA8B1B,EAAWL,GAC5C,MAAMgC,EAAUrB,EAAeb,MAAKF,GAAgBA,EAAatH,KAAO+H,IACpE2B,GACAA,EAAQjC,YAAYC,GACpBY,IACAqB,QAAQC,IAAI,cAAclC,EAASjB,6BAA6BiD,EAAQjD,YAExEkD,QAAQC,IAAI,mBAAmB7B,eAEvC,CFrCQ+B,CAAqB/B,EAAW0B,GAG7BA,CACX,CG6KO,SAASM,EAAsB3C,EAAY4C,GAE9C,MAAMC,EAAoBhI,SAAS0B,cAAc,OACjDsG,EAAkBpB,UAAUC,IAAI,YAChCmB,EAAkBlB,QAAQ3B,WAAaA,EAGvC,MAAM8C,EAAiBjI,SAAS0B,cAAc,OAC9CuG,EAAerB,UAAUC,IAAI,kBAG7B,MAAMqB,EAAmBlI,SAAS0B,cAAc,UAChDwG,EAAiBtB,UAAUC,IAAI,wBAC/BqB,EAAiBC,YAAc,IAG/BD,EAAiBE,iBAAiB,SAAU7F,IAIxC,GAHAA,EAAE8F,mBAEgBC,QAAQ,uDACV,OAEhB,MAAMnD,EAAa6C,EAAkBlB,QAAQ3B,WAIvCW,EADckC,EAAkBO,QAAQ,gBAChBzB,QAAQhB,UAChC2B,EAAUrB,EAAeb,MAAKiD,GAAKA,EAAEzK,KAAO+H,IAC5Cb,EAAWwC,GAASnC,gBAAgBH,GAEtCF,GDlML,SAAmCA,GAItC,MAAMwC,EAAUrB,EAAeb,MAAMF,GAAiBA,EAAaP,wBAAwB2D,MAAMC,GAAyBA,EAAqB3K,KAAOkH,EAASlH,OAC3J0J,GAEAA,EAAQvC,eAAeD,EAASlH,IAChCsI,IACAqB,QAAQC,IAAI,cAAc1C,EAAST,iCAAiCiD,EAAQjD,YAE5EkD,QAAQC,IAAI,sBAAsB1C,EAASlH,iBAEnD,CCwLY4K,CAA0B1D,GAC1BoB,KAEAqB,QAAQkB,KAAK,oCAAoCzD,mBAIrD6C,EAAkB5I,SA2OnB,SAAkC0G,GACvC,MAAM+C,EAAc7I,SAASkC,cAAc,iCAAiC4D,OAC5E,IAAK+C,EAAa,OAElB,MAAMb,EAAoBa,EAAY3G,cAAc,sBAC9C4G,EAAed,GAAqBA,EAAkBe,iBAAiB,aAAavL,OAAS,EAEnGwK,EAAkBpB,UAAUoC,OAAO,UAAWF,EAChD,CAhPQG,CAAyBnD,EAAU,IAIvC,MAAMoD,EAAQlJ,SAAS0B,cAAc,QACrCwH,EAAMtC,UAAUC,IAAI,aAEpBqC,EAAM7B,UAAY,UAGlB,MAAM7C,EAAQxE,SAAS0B,cAAc,MACrC8C,EAAM2D,YAAcJ,EAGpB,MAAMoB,EAAenJ,SAAS0B,cAAc,OAC5CyH,EAAavC,UAAUC,IAAI,uBAC3BsC,EAAarC,QAAQ3B,WAAaA,EAClCgE,EAAahB,YAAc,0BAE3BF,EAAelI,YAAYmI,GAC3BD,EAAelI,YAAYmJ,GAC3BjB,EAAelI,YAAYyE,GAC3ByD,EAAelI,YAAYoJ,GAC3BnB,EAAkBjI,YAAYkI,GAG9B,MAAMmB,EAAapJ,SAAS0B,cAAc,MAW1C,OAVA0H,EAAWxC,UAAUC,IAAI,iBACzBuC,EAAWxC,UAAUC,IAAI,UACzBmB,EAAkBjI,YAAYqJ,GAG9BnB,EAAeG,iBAAiB,SAAS,KACrCJ,EAAkBpB,UAAUoC,OAAO,YACnCI,EAAWxC,UAAUoC,OAAO,SAAS,IAGlChB,CACX,CAEO,SAASqB,EAAY5D,EAAUK,EAAWX,EAAY4C,GACzD,MAAMc,EAAc7I,SAASkC,cAAc,iCAAiC4D,OAC5E,IAAK+C,EAAa,OAElB,MAAMS,EA9QH,SAA+B7D,GAClC,MAAM6D,EAActJ,SAAS0B,cAAc,MAC3C4H,EAAY1C,UAAUC,IAAI,YAC1ByC,EAAYxC,QAAQnB,WAAaF,EAAS1H,GAC1CuL,EAAYxC,QAAQnC,SAAWc,EAASd,SAGxC,MAAM4E,EAAevJ,SAAS0B,cAAc,UAC5C6H,EAAa3C,UAAUC,IAAI,oBAC3B0C,EAAapB,YAAc,IAG3BoB,EAAanB,iBAAiB,SAAU7F,IACpCA,EAAE8F,kBACF,IAAIvC,EAAYL,EAASK,UAGzB,IAAKA,EAAW,CACZ,MACM+C,EADctG,EAAEP,OAAOuG,QAAQ,aACLA,QAAQ,gBACpCM,IACA/C,EAAY+C,GAAa/B,SAAShB,UAElCL,EAASK,UAAYA,EAE7B,CACKA,GAKDL,EAASN,YAAsC,SAAxBM,EAASN,WFTrC,SAAoCA,EAAYQ,GACnD,IAAK,MAAM8B,KAAWrB,EAAgB,CAClC,MAAMnB,EAAWwC,EAAQ3C,wBAAwBS,MAAMF,GAAiBA,EAAatH,KAAOoH,IAC5F,GAAIF,EAUA,YATiBA,EAASc,yBAAyBR,MAAMiE,GAAyBA,EAAqBzL,KAAO4H,KAG1GV,EAASS,eAAeC,GACxBU,IACAqB,QAAQC,IAAI,sBAAsBhC,+BAAwCV,EAAST,YAEnFkD,QAAQC,IAAI,sBAAsBhC,8BAAuCV,EAAST,WAI9F,CAEAkD,QAAQC,IAAI,qBAAqBxC,eACrC,CENYsE,CAA2BhE,EAASN,WAAYM,EAAS1H,IDW9D,SAAmC+H,EAAWH,GACjD,MAAM8B,EAAUrB,EAAeb,MAAKF,GAAgBA,EAAatH,KAAO+H,IACpE2B,GACAA,EAAQ/B,eAAeC,GACvBU,IACAqB,QAAQC,IAAI,sBAAsBhC,6BAAsC8B,EAAQjD,YAEhFkD,QAAQC,IAAI,mBAAmB7B,eAEvC,CCjBY4D,CAA0B5D,EAAWL,EAAS1H,IAGlDsI,IAGAiD,EAAYlK,SAGZuK,EAAyBlE,EAASN,YA+YnC,SAAyCW,GAC9C,MAAM+C,EAAc7I,SAASkC,cAAc,iCAAiC4D,OAC5E,IAAK+C,EAAa,OAElB,MAAMe,EAAiBf,EAAY3G,cAAc,wBAC3C2H,EAAoBhB,EAAY3G,cAAc,oBAE9C4H,EAAWF,GAAkBA,EAAeb,iBAAiB,MAAMvL,OAAS,EAGlFqM,EAAkBjD,UAAUoC,OAAO,UAAWc,EAChD,CAvZQC,CAAgCjE,IAtB5B4B,QAAQsC,MAAM,gDAsBwB,IAI9C,MAAM9D,EAAWlG,SAAS0B,cAAc,SACxCwE,EAAS+D,KAAO,WAChB/D,EAASU,UAAUC,IAAI,gBAEvBX,EAASgE,QAAUzE,EAASS,SAGxBT,EAASS,UACToD,EAAY1C,UAAUC,IAAI,aAI9BX,EAASkC,iBAAiB,SAAU7F,IAEhCA,EAAE8F,kBAEF5C,EAASS,UAAYT,EAASS,SAC9BA,EAASgE,QAAUzE,EAASS,SAE5BoD,EAAY1C,UAAUoC,OAAO,YAAavD,EAASS,UAGnDyD,EAAyBlE,EAASN,YAElCkB,GAAoB,IAIxB,MAAM8D,EAAcnK,SAAS0B,cAAc,OAC3CyI,EAAYvD,UAAUC,IAAI,eAG1B,MAAMuD,EAAapK,SAAS0B,cAAc,OAC1C0I,EAAWxD,UAAUC,IAAI,cAEzB,MAAMwD,EAAYrK,SAAS0B,cAAc,QACzC2I,EAAUzD,UAAUC,IAAI,aACxBwD,EAAUlC,YAAc1C,EAASjB,MAGjC,MAAM0E,EAAQlJ,SAAS0B,cAAc,QACrCwH,EAAMtC,UAAUC,IAAI,aAEpBqC,EAAM7B,UAAY,UAElB+C,EAAWrK,YAAYsK,GACvBD,EAAWrK,YAAYmJ,GAmBvB,MAAMoB,EAhBN,SAAoBC,GAChB,IAAKA,GAA0B,iBAAVA,EAAoB,OAAOA,EAGhD,MAAOrD,EAAMC,EAAOC,GAAOmD,EAAMC,MAAM,KACvC,IAAKtD,IAASC,IAAUC,EAAK,OAAOmD,EAGpC,MAAME,EAAO,IAAIzD,KAAK0D,OAAOxD,GAAOwD,OAAOvD,GAAS,EAAGuD,OAAOtD,IAM9D,MAAO,GAJgBuD,OAAOF,EAAKG,WAAa,GAAGC,SAAS,EAAG,QAC1CF,OAAOF,EAAKK,WAAWD,SAAS,EAAG,QAClCJ,EAAKM,eAG3B,CACqBC,CAAWvF,EAASf,SAGvCuG,EAAcjL,SAAS0B,cAAc,OA2D3C,OA1DAuJ,EAAYrE,UAAUC,IAAI,eAC1BoE,EAAY5D,UAAY,2MAI8C5B,EAAShB,8MAIR6F,2NAKpB7E,EAASd,SAAS2C,kBAAoB7B,EAASd,oNAK9Bc,EAASQ,2CAI7EkE,EAAYpK,YAAYqK,GACxBD,EAAYpK,YAAYkL,GAExB3B,EAAYvJ,YAAYwJ,GACxBD,EAAYvJ,YAAYmG,GAExBoD,EAAYvJ,YAAYoK,GAGvBC,EAAWhC,iBAAiB,SAAS,KAClCkB,EAAY1C,UAAUoC,OAAO,WAAW,IAIvBiC,EAAY/I,cAAc,iBAGlCkG,iBAAiB,SAAU7F,IAEpCA,EAAE8F,kBAGFrI,SAASkC,cAAc,kBAAkBgJ,MAAQzF,EAASjB,MAC1DxE,SAASkC,cAAc,wBAAwBgJ,MAAQzF,EAAShB,YAChEzE,SAASkC,cAAc,oBAAoBgJ,MAAQzF,EAASf,QAC5D1E,SAASkC,cAAc,qBAAqBgJ,MAAQzF,EAASd,SAC7D3E,SAASkC,cAAc,kBAAkBgJ,MAAQzF,EAASQ,OAAS,GAGnEkF,eAAerE,QAAQsE,OAAS3F,EAAS1H,GAGzCiC,SAASkC,cAAc,mBAAmBmJ,WAAW,IAGlD/B,CACX,CAyFwBgC,CAAsB7F,GAE1C,GAAIN,GAA6B,SAAfA,EAAuB,CAErC,IAAI6C,EAAoBa,EAAY3G,cAAc,gCAAgCiD,OAElF,IAAK6C,EAAmB,CAEpBA,EAAoBF,EAAsB3C,EAAY4C,GACtD,MAAMwD,EAAc1C,EAAY3G,cAAc,sBAC9CqJ,EAAY3E,UAAUxH,OAAO,UAC7BmM,EAAYxL,YAAYiI,EAC5B,CAEmBA,EAAkB9F,cAAc,MACxCnC,YAAYuJ,GAGvBK,EAAyBxE,EAC7B,KAAO,CAEH,MAAMqG,EAAsB3C,EAAY3G,cAAc,wBAChDuJ,EAA0B5C,EAAY3G,cAAc,oBAEtDsJ,GAAuBC,IACvBD,EAAoBzL,YAAYuJ,GAChCmC,EAAwB7E,UAAUxH,OAAO,UAEjD,CACJ,CAEO,SAASsM,EAAkBC,GAE9BA,EAAMC,iBAEN,MAAMC,EAAmB7L,SAASkC,cAAc,qBAC5C2J,GACAA,EAAiBjF,UAAUxH,OAAO,SAE1C,CA2HA,SAASuK,EAAyBxE,GAC9B,MAAM6C,EAAoBhI,SAASkC,cAAc,gCAAgCiD,OACjF,IAAK6C,EAAmB,OAExB,MAAM8D,EAAQ9D,EAAkBe,iBAAiB,eAC3CgD,EAAiB/D,EAAkBe,iBAAiB,yBAEpDI,EAAenB,EAAkB9F,cAAc,wBACjDiH,IACAA,EAAahB,YAAc,oBAAoB2D,EAAMtO,OAASuO,EAAevO,aAAasO,EAAMtO,SAExG,CAyBO,SAASwO,EAAoBlG,EAAWX,EAAY4C,GACvD,MAAMc,EAAc7I,SAASkC,cAAc,iCAAiC4D,OAC5E,IAAK+C,EAAa,OAElB,MAAMb,EAAoBa,EAAY3G,cAAc,sBAGpD,IAAK8F,EAAkB9F,cAAc,gCAAgCiD,OAAiB,CAClF,MAAM8G,EAAkBnE,EAAsB3C,EAAY4C,GAC1DC,EAAkBpB,UAAUxH,OAAO,UACnC4I,EAAkBjI,YAAYkM,EAClC,CACJ,CC7dO,SAASC,EAAsBP,GAElCA,EAAMC,iBAEN,MAAMO,EAAmBnM,SAASkC,cAAc,qBAC1CkK,EAAiBD,EAAiBjK,cAAc,mBAChDmK,EAAW,IAAIC,SAASF,GAI9B,IAAKA,EAAeG,gBAIhB,YAFAH,EAAeI,iBAMnB,MAAMhI,EAAQ6H,EAAStI,IAAI,SACrBU,EAAc4H,EAAStI,IAAI,eAI3BW,EACN,SAA4B+H,GACxB,MAAOvF,EAAMC,EAAOC,GAAOqF,EAAgBjC,MAAM,KAAKlK,IAAIoK,QAE1D,OAAO,IAAI1D,KAAKE,EAAMC,EAAQ,EAAGC,EACrC,CALgBsF,CADML,EAAStI,IAAI,YAQ7BY,EAAW0H,EAAStI,IAAI,YAGxB4I,EFrCH,SAAuBnI,EAAOC,EAAaC,EAASC,GACvD,MAAMgI,EAAa,IAAIrI,EAAQE,EAAOC,EAAaC,EAASC,GAI5D,OAHAyB,EAAerH,KAAK4N,GACpBtG,IACAqB,QAAQC,IAAI,YAAYnD,eACjBmI,CACX,CE+BuBC,CAAcpI,EAAOC,EAAaC,EAASC,GAE9D+C,QAAQC,IAAI,mBAAoBgF,GFmBhCvG,EAAeyG,SAASC,IAGpBpF,QAAQC,IAAI,YAAYmF,EAAoBtI,SAGxCsI,EAAoB/H,wBAAwBvH,OAAS,IACrDkK,QAAQC,IAAI,wBACZmF,EAAoB/H,wBAAwB8H,SAASrD,IACjD9B,QAAQC,IAAI,gBAAgB6B,EAAqBhF,gBAAgBgF,EAAqB9E,UAAU,KAKxGoI,EAAoBhI,wBAAwB+H,SAASnE,IACjDhB,QAAQC,IAAI,iBAAiBe,EAAqBlE,SAElDkE,EAAqB3C,yBAAyB8G,SAASrD,IACnD9B,QAAQC,IAAI,gBAAgB6B,EAAqBhF,gBAAgBgF,EAAqB9E,UAAU,GAClG,GACJ,IEnCNgD,QAAQqF,MAAM3G,GAGdK,EAAkBjC,EAAOC,EAAaC,EAASC,EAAUgI,EAAW5O,IAEpEoO,EAAiBa,QAEjBC,GACJ,CAEO,SAASC,EAAmBvB,GAC/BA,EAAMC,iBAEN,MAAMuB,EAAgBnN,SAASkC,cAAc,kBACvCkL,EAAcpN,SAASkC,cAAc,gBACrCmK,EAAW,IAAIC,SAASc,GAE9B,IAAKA,EAAYb,gBAEb,YADAa,EAAYZ,iBAIhB,MAAMhI,EAAQ6H,EAAStI,IAAI,SACrBU,EAAc4H,EAAStI,IAAI,eAC3BW,EAAU2H,EAAStI,IAAI,WACvBY,EAAW0H,EAAStI,IAAI,YACxBkC,EAAQoG,EAAStI,IAAI,SAGrB8E,EAAc7I,SAASkC,cAAc,yBACrC4D,EAAY+C,EAAcA,EAAY/B,QAAQhB,UAAY,KAChE,IAAKA,EAED,YADA4B,QAAQsC,MAAM,4DAKlB,MAAMqD,EAAgBrN,SAASkC,cAAc,sBACvCoL,EAAiBD,EAAc1P,QAAQ0P,EAAcE,eACrDpI,EAAsC,SAAzBmI,EAAepC,MAAmBoC,EAAepC,MAAQ,KACtEnD,EAAgBuF,EAAenF,YAGhChD,EAODkE,EADoB9B,EAAe/C,EAAOC,EAAaC,EAASC,EAAUsB,EAAOH,EAAWX,GACnEW,EAAWX,EAAY4C,GAJhDsB,EAFoB9B,EAAe/C,EAAOC,EAAaC,EAASC,EAAUsB,EAAOH,EAAW,MAEnEA,EAAW,MAOxCqH,EAAcH,OAClB,CC3FO,SAASC,IACd,MAAMO,EAAmBxN,SAASyN,eAAe,WAC3CC,EAAe1N,SAASyN,eAAe,gBAE7C,IAAKD,IAAqBE,EAAc,OAExC,MAAMC,EAAcH,EAAiBzE,iBAAiB,gBAAgBvL,OAAS,EAC/EkQ,EAAa3L,MAAM6L,QAAUD,EAAc,OAAS,OACtD,CCRA3N,SAASoI,iBAAiB,oBAAoB,MRiBvC,WACH,MAAMyF,EAAMtH,aAAauH,QAAQ3H,GACjC,GAAK0H,EAEL,IACmBxM,KAAK0M,MAAMF,GACnBhB,SAAQmB,IAEX,MAAMvG,EAAU,IAAInD,EAChB0J,EAAWxJ,MACXwJ,EAAWvJ,YArB3B,SAA6BwJ,GACzB,MAAMxD,EAAO,IAAIzD,KAAKiH,GAEtB,OADqB,IAAIjH,KAAKyD,EAAKyD,UAAiD,IAArCC,KAAKC,IAAI3D,EAAK4D,sBACzCpH,mBAAmB,QAAS,CAC5CC,KAAM,UACNC,MAAO,UACPC,IAAK,WAEb,CAcgBkH,CAAoBN,EAAWtJ,SAC/BsJ,EAAWrJ,UAEf8C,EAAQ1J,GAAKiQ,EAAWjQ,GAGxB0J,EAAQ1C,wBAA0BiJ,EAAWjJ,wBAAwBzE,KAAIiO,IACrE,MAAMC,EAAO,IAAIxI,EACbuI,EAAQ/J,MACR+J,EAAQ9J,YAER8J,EAAQ7J,QACR6J,EAAQ5J,SACR4J,EAAQtI,MAER,MAOJ,OALAuI,EAAKzQ,GAAKwQ,EAAQxQ,GAElByQ,EAAKtI,WAAaqI,EAAQrI,SAE1BsI,EAAK1I,UAAY2B,EAAQ1J,GAClByQ,CAAI,IAIf/G,EAAQ3C,wBAA0BkJ,EAAWlJ,wBAAwBxE,KAAImO,IACrE,MAAMxJ,EAAW,IAAIY,EAAS4I,EAAYjK,MAAOiK,EAAY3I,WAwBzD,OAvBJb,EAASlH,GAAK0Q,EAAY1Q,GAG1BkH,EAASc,yBAA2B,GAEhC2I,MAAMC,QAAQF,EAAY1I,4BAC1Bd,EAASc,yBAA2B0I,EAAY1I,yBAAyBzF,KAAIiO,IACzE,MAAMC,EAAO,IAAIxI,EACbuI,EAAQ/J,MACR+J,EAAQ9J,YAER8J,EAAQ7J,QACR6J,EAAQ5J,SACR4J,EAAQtI,MAERhB,EAASlH,IAKb,OAHAyQ,EAAKzQ,GAAKwQ,EAAQxQ,GAClByQ,EAAKtI,WAAaqI,EAAQrI,SAC1BsI,EAAK1I,UAAY2B,EAAQ1J,GAClByQ,CAAI,KAGRvJ,CAAQ,IAIvBmB,EAAerH,KAAK0I,EAAQ,GAGpC,CAAE,MAAOuC,GACLtC,QAAQsC,MAAM,mDAAoDA,EACtE,CACJ,CQxFI4E,GACA,MAAMC,EAAc7O,SAASkC,cAAc,YAErCiK,EAAmBnM,SAASkC,cAAc,qBAC1C4M,EAAiB9O,SAASkC,cAAc,mBACxC6M,EAAkB5C,EAAiBjK,cAAc,oBACjD8M,EAAmB7C,EAAiBjK,cAAc,qBAClDkK,EAAiBD,EAAiBjK,cAAc,mBAEhDiL,EAAgBnN,SAASkC,cAAc,kBACvC+M,EAAe9B,EAAcjL,cAAc,iBAC3CgN,EAAgB/B,EAAcjL,cAAc,kBAC5CkL,EAAcD,EAAcjL,cAAc,gBAE1CiN,EAAoBhC,EAAcjL,cAAc,sBAEhDiJ,EAAiBnL,SAASkC,cAAc,mBAG9C4M,EAAe1G,iBAAiB,SAAS,KACrC+D,EAAiBd,WAAW,IAIhC0D,EAAgB3G,iBAAiB,SAAS,KACtC+D,EAAiBa,OAAO,IAI5Bb,EAAiB/D,iBAAiB,SAAS,KACnCgE,GAAgBA,EAAegD,OAAO,IAI9CJ,EAAiB5G,iBAAiB,QAAS8D,GAG3C9F,EAAeyG,SAAQpF,IACnBhB,EACIgB,EAAQjD,MACRiD,EAAQhD,YACRgD,EAAQ/C,QACR+C,EAAQ9C,SACR8C,EAAQ1J,IAIZ0J,EAAQ1C,wBAAwB8H,SAAQ2B,IACpCnF,EAAYmF,EAAM/G,EAAQ1J,GAAI,KAAK,IAIvC0J,EAAQ3C,wBAAwB+H,SAAQ5H,IAEa,IAA7CA,EAASc,yBAAyBvI,OAClCwO,EAAoBvE,EAAQ1J,GAAIkH,EAASlH,GAAIkH,EAAST,OAEtDS,EAASc,yBAAyB8G,SAAQ2B,IACtCnF,EAAYmF,EAAM/G,EAAQ1J,GAAIkH,EAASlH,GAAIkH,EAAST,MAAM,GAElE,GACF,IAKNqK,EAAYzG,iBAAiB,SAAUuD,IACd3L,SAASkC,cAAc,iBC1E7C,SAAiCyJ,GACpC,MAAM0D,EAAc1D,EAAM3J,OAAOuG,QAAQ,gBACnC+G,EAAqC,kBAApB3D,EAAM3J,OAAOjE,GAC9BwR,EAAuC,oBAApB5D,EAAM3J,OAAOjE,GAChCyR,EAAaH,GAAeA,EAAYzI,UAAU6I,SAAS,YAgEjE,SAASC,EAAW/I,GAEhB,MAAMgJ,EAAiBhJ,EAAKzE,cAAc,oBACtCyN,GAAgBA,EAAe/I,UAAUC,IAAI,UAGjD,MAAM+I,EAAcjJ,EAAKzE,cAAc,gBACnC0N,GAAaA,EAAYhJ,UAAUC,IAAI,UAGrBF,EAAKoC,iBAAiB,sBAC9B8D,SAAQ2B,IAClBA,EAAK5H,UAAUxH,OAAO,WAAW,IAIXuH,EAAKoC,iBAAiB,sBAC9B8D,SAAQ5H,IACtBA,EAAS2B,UAAUxH,OAAO,YAC1B,MAAMgK,EAAanE,EAAS/C,cAAc,kBACtCkH,GAAYA,EAAWxC,UAAUC,IAAI,SAAS,IAItDF,EAAKC,UAAUC,IAAI,aAGnBgJ,YAAW,KACPlJ,EAAKC,UAAUxH,OAAO,YAAa,YACnCY,SAAS8P,KAAKlJ,UAAUxH,OAAO,aAG/B,MAAM2Q,EAAc/P,SAASkC,cAAc,2BACvC6N,GAAaA,EAAY3Q,SAG7BuH,EAAKC,UAAUxH,OAAO,YACtBY,SAAS8P,KAAKlJ,UAAUxH,OAAO,aAG/BY,SAASgQ,oBAAoB,QAASC,GACtCjQ,SAASgQ,oBAAoB,UAAWE,EAAc,GACvD,IACP,CAEA,SAASD,EAAoBtE,GACzB,MAAMwE,EAAkBnQ,SAASkC,cAAc,aAG1CiO,IAGAA,EAAgBV,SAAS9D,EAAM3J,SAChC0N,EAAWS,GAEnB,CAEA,SAASD,EAAcvE,GACnB,GAAkB,WAAdA,EAAMjI,IAAkB,OAI5B,GADmB1D,SAASkC,cAAc,gBAGtC,OAIJ,MAAMkO,EAAepQ,SAASkC,cAAc,yBACxCkO,GACAV,EAAWU,EAEnB,CArIKf,IAGDC,EAoIJ,SAAoB3I,GAGhB,IADkB2B,QAAQ,mEACV,OAGhB,MAAMyH,EAAc/P,SAASkC,cAAc,2BACvC6N,GAAaA,EAAY3Q,SAGzBuH,EAAKC,UAAU6I,SAAS,cACxB9I,EAAKC,UAAUxH,OAAO,YACtBY,SAAS8P,KAAKlJ,UAAUxH,OAAO,aAC/BY,SAASgQ,oBAAoB,QAASC,ILxE3C,SAAuBnK,GAC1B,MAAMvG,EAAQ6G,EAAeiK,WAAUhL,GAAgBA,EAAatH,KAAO+H,KAC5D,IAAXvG,GACA6G,EAAetH,OAAOS,EAAO,GAC7B8G,IACAqB,QAAQC,IAAI,oBAAoB7B,gBAEhC4B,QAAQC,IAAI,oBAAoB7B,gBAExC,CKoEQwK,CADkB3J,EAAKG,QAAQhB,WAI/Ba,EAAKvH,SAEL6N,GACJ,CA3JIsD,CAAWlB,GAIXE,EACAG,EAAWL,KAKXG,GAAeD,GAAqBD,KAIpCE,EACAE,EAAWL,GAKf,SAAoB1I,GAEhB,MAAMoJ,EAAc/P,SAAS0B,cAAc,OAC3CqO,EAAYnJ,UAAUC,IAAI,0BAG1BkJ,EAAYhO,MAAMyO,MAAQ,GAAG7J,EAAK8J,gBAClCV,EAAYhO,MAAM2O,OAAS,GAAG/J,EAAKgK,iBAKnChK,EAAK9D,WAAW+N,aAAab,EAAapJ,GAG1CA,EAAKC,UAAUC,IAAI,YACnB7G,SAAS8P,KAAKlJ,UAAUC,IAAI,aAE5BF,EAAKG,QAAQ+J,cAAgBd,EAK7B,MAAMJ,EAAiBhJ,EAAKzE,cAAc,oBACtCyN,GAAgBA,EAAe/I,UAAUxH,OAAO,UAGpD,MAAMwQ,EAAcjJ,EAAKzE,cAAc,gBACnC0N,GAAaA,EAAYhJ,UAAUxH,OAAO,UAG9CyQ,YAAW,KACP7P,SAASoI,iBAAiB,QAAS6H,GACnCjQ,SAASoI,iBAAiB,UAAW8H,EAAc,GACpD,GACP,CAtCIY,CAAWzB,IA2InB,CD3FY0B,CAAwBpF,EAC5B,IAKJ3L,SAASoI,iBAAiB,SAAUuD,IAChC,GAAIA,EAAM3J,QAA8B,kBAApB2J,EAAM3J,OAAOjE,GAAwB,CAErD,MAAM8K,EAAc8C,EAAM3J,OAAOuG,QAAQ,gBACnCzC,EAAY+C,EAAcA,EAAY/B,QAAQhB,UAAY,KAE5DA,GHkPT,SAAkCA,GACrC,MAAMkL,EAAWhR,SAASkC,cAAc,sBAGxC8O,EAAS3J,UAAY,GAGrB,MAAM4J,EAAgBjR,SAAS0B,cAAc,UAC7CuP,EAAc/F,MAAQ,OACtB+F,EAAc9I,YAAc,yBAC5B6I,EAASjR,YAAYkR,GAGDjR,SAASkC,cAAc,iCAAiC4D,OACvCiD,iBAAiB,aAErC8D,SAAQ5H,IACrB,MAAMiM,EAASlR,SAAS0B,cAAc,UACtCwP,EAAOhG,MAAQjG,EAAS6B,QAAQ3B,WAChC+L,EAAO/I,YAAclD,EAAS/C,cAAc,MAAMiG,YAClD6I,EAASjR,YAAYmR,EAAO,GAEpC,CGvQgBC,CAAyBrL,GAG7BqH,EAAc9B,YAEd8B,EAAciE,UAAY,CAC9B,KAIJjE,EAAc/E,iBAAiB,SAAUuD,IACrCA,EAAMtD,iBAAiB,IAI3B4G,EAAa7G,iBAAiB,SAAS,KACnC+E,EAAcH,OAAO,IAIzBG,EAAc/E,iBAAiB,SAAS,KAChCgF,GAAaA,EAAYgC,OAAO,IAIxCF,EAAc9G,iBAAiB,QAAS8E,GAGxCiC,EAAkB/G,iBAAiB,QAASsD,GHmMzC,WACH,MAAMyB,EAAgBnN,SAASkC,cAAc,kBACvCkL,EAAcD,EAAcjL,cAAc,gBAC1C2J,EAAmBsB,EAAcjL,cAAc,qBAEhD2J,IAGLsB,EAAc/E,iBAAiB,SAAS,KACpCyD,EAAiBjF,UAAUC,IAAI,SAAS,IAI5CuG,EAAYhF,iBAAiB,UAAU,KACnCyD,EAAiBjF,UAAUC,IAAI,SAAS,IAEhD,CGjNIwK,GH4O6BrR,SAASkC,cAAc,mBAE/BkG,iBAAiB,SAAUuD,IAC5CA,EAAMC,iBAEN,MAAM0F,EAAgBtR,SAASkC,cAAc,kBACvC8O,EAAWhR,SAASkC,cAAc,sBAClCsC,EAAQ8M,EAAcpG,MAAMqG,OAGlC,GAAc,KAAV/M,EAEA,YADAgN,MAAM,wCAKV,MAAM3I,EAAc7I,SAASkC,cAAc,yBACrC4D,EAAY+C,EAAcA,EAAY/B,QAAQhB,UAAY,KAEhE,IAAKA,EAED,YADA4B,QAAQsC,MAAM,2CAKlB,MAAMyH,EF3XP,SAAwBjN,EAAOsB,GAClC,MAAM2L,EAAc,IAAI5L,EAASrB,EAAOsB,GAExC,OCIG,SAA8BA,EAAWb,GAC5C,MAAMwC,EAAUrB,EAAeb,MAAMF,GAAiBA,EAAatH,KAAO+H,IACtE2B,GAEAA,EAAQzC,YAAYC,GACpBoB,IACAqB,QAAQC,IAAI,cAAc1C,EAAST,6BAA6BiD,EAAQjD,YAExEkD,QAAQC,IAAI,mBAAmB7B,eAEvC,CDfI4L,CAAqB5L,EAAW2L,GACzBA,CACX,CEuX4BE,CAAenN,EAAOsB,GAC1C4B,QAAQC,IAAI,qBAAsB8J,GAGlCzF,EAAoBlG,EAAW2L,EAAY1T,GAAI0T,EAAYjN,OAG3D,MAAM0M,EAASlR,SAAS0B,cAAc,UACtCwP,EAAOhG,MAAQuG,EAAY1T,GAC3BmT,EAAO/I,YAAcsJ,EAAYjN,MACjC0M,EAAOU,UAAW,EAElBZ,EAASjR,YAAYmR,GAGrBI,EAAcpG,MAAQ,GACtBlL,SAASkC,cAAc,qBAAqB0E,UAAUC,IAAI,SAAS,IGjRvEsE,EAAe/C,iBAAiB,SAAUuD,IACtCA,EAAMtD,iBAAiB,IAI3BrI,SAASkC,cAAc,kBAAkBkG,iBAAiB,SAAS,KAC/D+C,EAAe6B,OAAO,IAI1BhN,SAASkC,cAAc,mBAAmBkG,iBAAiB,SAAS,KAEhE,MAAMyJ,EAAc,CAChBrN,MAAOxE,SAASkC,cAAc,kBAAkBgJ,MAChDzG,YAAazE,SAASkC,cAAc,wBAAwBgJ,MAC5DxG,QAAS1E,SAASkC,cAAc,oBAAoBgJ,MACpDvG,SAAU3E,SAASkC,cAAc,qBAAqBgJ,MACtDjF,MAAOjG,SAASkC,cAAc,kBAAkBgJ,QHoQrD,SAAwBE,EAAQyG,GAEnC,MAAMvI,EAActJ,SAASkC,cAAc,gCAAgCkJ,OAC3E,IAAK9B,EAED,YADA5B,QAAQsC,MAAM,gBAAgBoB,2BAOlC,MAAMtF,EAAYwD,EAAYf,QAAQ,gBAAgBzB,QAAQhB,UACxDmG,EAAkB3C,EAAYf,QAAQ,aACtCpD,EAAa8G,EAAkBA,EAAgBnF,QAAQ3B,WAAa,KACpE4C,EAAgBkE,EAAkBA,EAAgB/J,cAAc,MAAMiG,YAAc,KAG1FmB,EAAYlK,SAaZiK,EAVwB,CACpBtL,GAAIqN,EACJtF,UAAWA,EAEXI,UAAU,KAEP2L,GAIsB/L,EAAWX,EAAY4C,EACxD,CG7RQ+J,CAHe3G,EAAerE,QAAQsE,OAGfyG,GAEvB1G,EAAe6B,OAAO,IAIxBC,GAAmB,G","sources":["webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///./src/style.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/nonce","webpack:///./src/style.css?7163","webpack:///./src/models/Project.js","webpack:///./src/models/TaskList.js","webpack:///./src/models/TaskItem.js","webpack:///./src/models/projectStorage.js","webpack:///./src/views/cardGenerator.js","webpack:///./src/controllers/taskItemController.js","webpack:///./src/controllers/taskListController.js","webpack:///./src/controllers/projectController.js","webpack:///./src/views/taskGenerator.js","webpack:///./src/views/formHandler.js","webpack:///./src/index.js","webpack:///./src/views/appUI.js","webpack:///./src/views/projectCardHandler.js"],"sourcesContent":["\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  box-sizing: border-box;\n  margin: 0;\n}\n\nbody {\n  margin: 0;\n  font-family: 'Inter', sans-serif;\n  /* deep space blue-violet gradient base */\n  background: #0f0c29;\n  background: linear-gradient(135deg, #0f0c29, #302b63, #24243e);\n  color: #f3f4f6;\n  /* ensure the page is at least the full viewport */\n  min-height: 100vh;\n  /* allow scrolling */\n  overflow-y: auto;\n}\n\n/* === navigation === */\nheader {\n  background: #1e1b34;\n  padding: 1rem;\n  text-align: center;\n  border-bottom: 1px solid #3a3a52;\n}\nnav ul {\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  gap: 2rem;\n  padding: 0;\n  margin: 0;\n}\nnav li {\n  cursor: pointer;\n  color: #a78bfa;\n  font-weight: 600;\n  transition: color 0.3s ease;\n}\nnav li:hover {\n  color: #f472b6;\n}\nnav li.selected {\n  color: #f472b6;\n  border-bottom: 2px solid #f472b6;\n}\n\n/* === main container === */\n.mainContainer {\n  padding: 2rem;\n  max-width: 1200px;\n  margin: auto;\n}\n\n/* === project grid === */\n.projectGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 200px);\n  justify-content: center;\n  gap: 10px;\n}\n\n#addProjectDiv {\n  display: grid;\n  justify-content: center;\n  padding: 25px;\n}\n\n/* center dialog boxes on window, replaces former #addProjectDialog, #addTaskDialog, and #editTaskDialog */\ndialog {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0;\n  padding: 2rem;\n  max-width: 500px;\n  color: #f3f4f6;\n  border-radius: 12px;\n  background: rgba(30, 27, 52, 0.85);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(167, 139, 250, 0.2);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);\n  animation: fadeIn 0.3s ease;\n  z-index: 1000;\n  max-height: 90vh;\n  overflow-y: auto;\n  pointer-events: auto;\n}\n\n/* === project card === */\n.projectCard {\n  background: #1e1b34;\n  border: 1px solid #3a3a52;\n  border-radius: 12px;\n  padding: 1rem;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  box-shadow: 0 8px 16px rgba(0,0,0,0.2);\n  cursor: pointer;\n}\n.projectCard:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 12px 24px rgba(0,0,0,0.3);\n}\n.projectCard h3 {\n  font-size: 1.2rem;\n  color: #a78bfa;\n}\n.projectCard p {\n  font-size: 0.90rem;\n  padding: 3px;\n}\n.projectCardBody strong {\n  color: #f472b6;\n}\n/* ensure text inside the card is left-aligned and \ndoes not stretch beyond its container */\n.projectCard h3,\n.projectCard p {\n  margin: 0;\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n}\n/* priority badge */\n.priorityTag {\n  display: inline-block;\n  padding: 0.3rem 0.7rem;\n  border-radius: 20px;\n  font-size: 0.85rem;\n  font-weight: bold;\n  color: white;\n}\n.priority-low { background: #3b82f6; }\n.priority-medium { background: #facc15; color: #1e1b34; }\n.priority-high { background: #f97316; }\n.priority-urgent { background: #ef4444; }\n\n/* === buttons === */\n#openAddProject {\n  background: #a78bfa;\n  color: #fff;\n  border: none;\n  padding: 0.6rem 1.2rem;\n  border-radius: 6px;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: background 0.3s ease;\n}\n#openAddProject:hover {\n  background: #c084fc;\n}\n\n/* === delete button on cards === */\n#deleteProject {\n  display: flex;\n  background: transparent;\n  border: 1px solid #f87171;\n  color: #f87171;\n  font-size: 1rem;\n  font-weight: bolder;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n  padding-top: 2px;\n  border-radius: 25%;\n  width: 24px;\n  height: 24px;\n}\n#deleteProject:hover {\n  transform: scale(1.1);\n  color: #ef4444;\n}\n\n/* header section (title + delete button) */\n.projectCardHeader {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  /* make sure header stays fixed on card expansion */\n  padding-bottom: 10px;\n  top: 0;\n  z-index: 5;\n}\n\n/* prevent overlap of title with delete button */\n.projectCardHeader h3 {\n  max-width: 80%;\n}\n\n/* === modal form layout === */\ndialog form {\n  display: flex;\n  flex-direction: column;\n}\ndialog label {\n  font-weight: 600;\n  font-size: 0.95rem;\n  color: #a78bfa;\n}\ndialog input, dialog textarea, dialog select {\n  padding: 0.6rem 1rem;\n  background: #2a2645;\n  border: 1px solid #3a3a52;\n  border-radius: 8px;\n  color: #f3f4f6;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n}\ndialog input:focus, dialog textarea:focus, dialog select:focus {\n  border-color: #c084fc;\n  outline: none;\n}\n\n/* project modal spacing */\n#addProjectForm input, select {\n  margin-bottom: 10px;\n}\n/* add task and edit task modal spacing */\n#addTaskForm input, #addTaskForm select, #addTaskForm textarea,\n#editTaskForm input, #editTaskForm select, #editTaskForm textarea {\n  margin-bottom: 10px;\n}\n\n/* === modal buttons === */\ndialog .buttonDiv {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 2rem;\n}\ndialog button {\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  border: none;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 1rem;\n}\n#closeAddProject, #closeAddTask, #closeEditTask {\n  background: #2d2d42;\n  color: #f3f4f6;\n}\n#closeAddProject:hover, #closeAddTask:hover, #closeEditTask:hover {\n  background: #26264d;\n}\n#submitAddProject, #submitAddTask, #submitEditTask {\n  background: #a78bfa;\n  color: #fff;\n}\n#submitAddProject:hover, #submitAddTask:hover, #submitEditTask:hover {\n  background: #c084fc;\n}\n\n/* === modal-like background effect === */\n.modalOpen::before {\n  content: \"\";\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 5;\n}\n.modalOpen {\n  /* disable clicks on everything, inside and outside the card (reenabled specifically in .expanded below) */\n  pointer-events: none;\n}\n.modalOpen #editTaskDialog {\n  pointer-events: auto;\n  /* above modal overlay and project card */\n  z-index: 15;\n}\n\n.projectCard.expanded {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  /* buffer card start from viewport top edge */\n  top: 10vh;\n  left: 50%;\n  /* centers the card horizontally(-50%) but prevents vertical centering(0%) so it grows downward with the content */\n  transform: translate(-50%, 0%);\n  width: 90vw;\n  max-width: 700px;\n  z-index: 10;\n  background: rgba(255, 255, 255, 0.97);\n  color: #1e1b34;\n  padding: 2rem;\n  border-radius: 14px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  /* enable clicks on the expanded card */\n  pointer-events: auto;\n  /* animation transition from bottom-up */\n  transform-origin: center top;\n  animation: slideUpFade 0.3s ease-out;\n  overflow-y: auto;\n  max-height: 85vh;\n  backdrop-filter: blur(8px);\n  cursor: auto;\n}\n@keyframes slideUpFade {\n  from {\n    transform: translate(-50%, 20%);\n    opacity: 0;\n  }\n  to {\n    transform: translate(-50%, 0%);\n    opacity: 1;\n  }\n}\n\n.projectCard.shrinking {\n  animation: slideDownFade 250ms ease-in forwards;\n  pointer-events: none;\n}\n/* animation transition for shrinking project card top-down */\n@keyframes slideDownFade {\n  0% {\n    transform: scale(1) translate(-50%, 0%);\n    opacity: 1;\n  }\n  100% {\n    transform: scale(1) translate(-50%, 50%);\n    opacity: 0;\n  }\n}\n\n/* OVERRIDE: prevent text truncation on expanded card*/\n.projectCard.expanded h3,\n.projectCard.expanded p {\n  /* allows text wrapping */\n  white-space: normal;\n  /* ensures the text isn't cut off */\n  overflow: visible;\n  /* no ellipsis */\n  text-overflow: clip;\n  /* ensures long words don't overflow */\n  word-wrap: break-word;\n}\n\n.projectCardPlaceholder {\n  /* keeps the space but hides the element */\n  visibility: hidden;\n  background: transparent;\n  border: none;\n}\n\n/* === style the minimize button === */\n#minimizeProject {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: -50px;\n  background: darkgrey;\n  color: white;\n  border: none;\n  border-radius: 25%;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  line-height: 0;\n}\n#minimizeProject:hover {\n  background: grey;\n}\n/* hide minimize button */\n#minimizeProject.hidden {\n  display: none;\n}\n\n/* === task related settings === */\n.taskSection {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-top: 1rem;\n}\n/* remove automatic indent on li items */\n.taskSection ul {\n  margin: 0px;\n  padding: 0px;\n}\n.taskSection button#addTaskButton {\n  background: #4f46e5;\n  color: white;\n  font-weight: 600;\n  padding: 8px 14px;\n  border-radius: 6px;\n  margin-bottom: 1rem;\n  cursor: pointer;\n}\n.taskSection button#addTaskButton:hover {\n  background: #4338ca;\n}\n/* hide task section */\n.taskSection.hidden {\n  display: none;\n}\n\n/* === add cog settings icon to task details section === */\n.taskDetails {\n  /* key point: this makes the child .settingsIcon absolute positioning relative to this specific div */\n  position: relative;\n}\n.taskDetails p {\n  padding-right: 1em;\n}\n.settingsIcon {\n  position: absolute;\n  top: 0.5rem;\n  right: 0.7rem;\n  cursor: pointer;\n  font-size: 1.2rem;\n  color: var(--accent);\n  opacity: 0.6;\n  transition: opacity 0.2s ease;\n}\n.settingsIcon:hover {\n  color: #333;\n  opacity: 1;\n}\n\n/* === task list section === */\n/* control task list select dropdown bar size */\n#taskListSelection {\n  max-width: 100%;\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  display: inline-block;\n}\n.unassignedTasks h4,\n.taskListContainer h4 {\n  font-size: 1.6rem;\n  margin-bottom: 1rem;\n  color: #a78bfa;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n.unassignedTasks h4::before {\n  /* font awesome fa-tasks */\n  content: \"\\\\f0ae\";\n  font-family: \"Font Awesome 6 Free\";\n  font-weight: 900;\n}\n.taskListContainer h4::before {\n  /* font awesome fa-list */\n  content: \"\\\\f022\"; \n  font-family: \"Font Awesome 6 Free\";\n  font-weight: 900;\n}\n.unassignedTasks.hidden {\n  display: none;\n}\n.taskListContainer.hidden {\n  display: none;\n}\n.taskListInputDiv.hidden {\n  display: none;\n}\n\n/* === style the new list input line inside \"+ New Task\" modal === */\n.taskListInputDiv {\n  margin-top: 0.5rem;\n  display: flex;\n  gap: 0.5rem;\n}\n.taskListInputDiv input {\n  flex-grow: 1;\n  background: #2a2645;\n  color: #fff;\n  border: 1px solid #555;\n  border-radius: 6px;\n  padding: 0.5rem 0.75rem;\n  /* stops appearance of new task list input from stretching modal */\n  width: 100%;\n}\n.taskListInputDiv button {\n  background: #10b981;\n  color: #fff;\n  border: none;\n  border-radius: 6px;\n  font-weight: bold;\n  height: 36px;\n}\n\n/* === (with above) all task list css settings === */\n.taskListHeader {\n  display: flex;\n  /* align all children to the top */\n  align-items: flex-start;\n  gap: 5px;\n  width: 100%;\n  margin-bottom: 12px;\n  cursor: pointer;\n}\n/* style all task list titles */\n.taskListHeader h5 {\n  font-size: 1.3rem;\n  /* create ellipsis for long titles */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n/* when expanded, allow wrapping */\n.taskList.expanded .taskListHeader h5 {\n  white-space: normal;\n  overflow: visible;\n  text-overflow: unset;\n  word-wrap: break-word;\n}\n/* adjust task list arrow to align with title */\n.taskListHeader .taskArrow {\n  align-self: start;\n}\n/* rotate arrow down when expanded (specifically for task list arrow) */\n.taskList.expanded .taskListHeader .taskArrow {\n  transform: rotate(90deg);\n}\n/* align tasks within task lists under the arrow */\n.taskSection .taskListItems {\n  padding-left: 27px;\n}\n.taskListItems.hidden {\n  display: none;\n}\n\n/* === settings for task list delete button === */\n.deleteTaskListButton {\n  display: flex;\n  background: #ef4444;\n  border: 1px solid #f87171;\n  color: white;\n  font-size: 1rem;\n  font-weight: bolder;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n  padding-top: 2px;\n  border-radius: 25%;\n  width: 22px;\n  height: 20px;\n  margin-top: 2px;\n  margin-right: 6px;\n  line-height: 0.9;\n}\n.deleteTaskListButton:hover {\n  transform: scale(1.1);\n  color: white;\n}\n\n/* === settings for task progress counter === */\n.taskProgressCounter {\n  margin-top: 8px;\n  margin-left: auto;\n  font-size: 0.85em;\n  color: #555;\n}\n\n/* === all task item css settings === */\n/* entire task li gets the priority color as background, except checkbox area */\n.taskItem {\n  display: flex;\n  align-items: flex-start;\n  position: relative;\n  margin-bottom: 8px;\n  list-style: none;\n  border-radius: 0.5rem;\n  margin-bottom: 0.75rem;\n  overflow: hidden;\n  transition: all 0.25s ease;\n}\n/* priority background for each task li */\n.taskItem[data-priority=\"low\"] .taskHeader    { background-color: #d0e7ff; }\n.taskItem[data-priority=\"medium\"] .taskHeader { background-color: #fff3b0; }\n.taskItem[data-priority=\"high\"] .taskHeader   { background-color: #ffd8a8; }\n.taskItem[data-priority=\"urgent\"] .taskHeader { background-color: #ffb0b0; }\n\n/* header (title) stays fixed, clickable to expand */\n.taskHeader {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: start;\n  gap: 10px;\n  padding: 8px 12px;\n  font-weight: bold;\n  cursor: pointer;\n  background-color: var(--priority-color);\n  border-radius: 4px;\n  position: relative;\n}\n.taskTitle {\n  /* create ellipsis for long titles */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  /* ensures long unbroken text wraps */\n  overflow-wrap: break-word;\n  /* breaks long words if needed */\n  word-break: break-word;\n}\n/* when expanded, allow wrapping but don’t shift the arrow */\n.taskItem.expanded .taskHeader {\n  align-items: start;\n}\n/* when the task is expanded, remove ellipsis and allow wrapping */\n.taskItem.expanded .taskTitle {\n  white-space: normal;\n  overflow: visible;\n  text-overflow: unset;\n  word-wrap: break-word;\n}\n\n/* === task arrow settings === */\n.taskArrow {\n  align-self: start;\n  font-size: 16px;\n  min-width: 16px;\n  text-align: center;\n  margin-top: 2px;\n  transition: transform 0.3s ease;\n}\n/* rotate arrow down when expanded */\n.taskItem.expanded .taskHeader .taskArrow {\n  transform: rotate(90deg);\n}\n\n/* === details drawer settings === */\n/* details drawer hidden by default */\n.taskDetails {\n  max-height: 0;\n  opacity: 0;\n  overflow: hidden;\n  background-color: white;\n  padding: 8px 12px;\n  transition: all 0.3s ease;\n  display: none;\n}\n/* expanded state reveals the drawer */\n.taskItem.expanded .taskDetails {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  background: rgba(255, 255, 255, 0.05);\n  backdrop-filter: blur(6px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  animation: fadeSlideIn 0.25s ease;\n  /* remove the height limit of the section */\n  max-height: none;\n  opacity: 1;\n  /* ensures long unbroken text wraps */\n  overflow-wrap: break-word;\n  /* breaks long words if needed */\n  word-break: break-word;\n}\n.taskItem .detailRow {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.75rem;\n  font-size: 0.95rem;\n  /* prevent description text from overlapping cog icon on smaller window*/\n  padding-right: 10px;\n}\n.taskItem .detailRow i {\n  color: var(--accent-light);\n  margin-top: 0.1rem;\n}\n.taskItem .label {\n  font-weight: 600;\n  margin-right: 0.25rem;\n  color: var(--text-primary);\n}\n.taskItem .value {\n  color: var(--text-secondary);\n  opacity: 0.85;\n}\n@keyframes fadeSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-5px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* === settings for task checkbox === */\n.taskCheckbox {\n  margin-right: 10px;\n  margin-top: 12px;\n  flex-shrink: 0;\n  cursor: pointer;\n}\n.taskContent {\n  flex-grow: 1;\n  width: 100%;\n}\n.taskItem.completed .taskHeader {\n  text-decoration: line-through;\n  opacity: 0.6;\n}\n.taskItem.completed .taskDetails {\n  opacity: 0.6;\n}\n\n/* === settings for task delete button === */\n.deleteTaskButton {\n  display: flex;\n  background: transparent;\n  border: 1px solid #f87171;\n  color: #f87171;\n  font-size: 1rem;\n  font-weight: bolder;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n  padding-top: 2px;\n  border-radius: 25%;\n  width: 22px;\n  height: 20px;\n  margin-top: 8px;\n  margin-left: 5px;\n  margin-right: 10px;\n  line-height: 0.9;\n}\n.deleteTaskButton:hover {\n  transform: scale(1.1);\n  color: #ef4444;\n}\n\n/* === welcome modal === */\n#welcomeModal {\n  position: fixed;\n  top: 35%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(20, 18, 38, 0.92);\n  backdrop-filter: blur(8px);\n  border: 1px solid #3a3a52;\n  border-radius: 12px;\n  color: #f3f4f6;\n  padding: 2rem;\n  max-width: 400px;\n  box-shadow: 0 0 30px rgba(0,0,0,0.4);\n  z-index: 1000;\n  animation: fadeIn 0.4s ease;\n  text-align: center;\n}\n.welcomeContent h2 {\n  margin-top: 0;\n  color: #a78bfa;\n}\n.welcomeContent p {\n  margin: 0.5rem 0;\n  font-size: 0.95rem;\n  line-height: 1.4;\n}\n\n/* === responsive font === */\n@media (max-width: 600px) {\n  .projectCard {\n    font-size: 0.9rem;\n  }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"* {\\n  box-sizing: border-box;\\n  margin: 0;\\n}\\n\\nbody {\\n  margin: 0;\\n  font-family: 'Inter', sans-serif;\\n  /* deep space blue-violet gradient base */\\n  background: #0f0c29;\\n  background: linear-gradient(135deg, #0f0c29, #302b63, #24243e);\\n  color: #f3f4f6;\\n  /* ensure the page is at least the full viewport */\\n  min-height: 100vh;\\n  /* allow scrolling */\\n  overflow-y: auto;\\n}\\n\\n/* === navigation === */\\nheader {\\n  background: #1e1b34;\\n  padding: 1rem;\\n  text-align: center;\\n  border-bottom: 1px solid #3a3a52;\\n}\\nnav ul {\\n  list-style: none;\\n  display: flex;\\n  justify-content: center;\\n  gap: 2rem;\\n  padding: 0;\\n  margin: 0;\\n}\\nnav li {\\n  cursor: pointer;\\n  color: #a78bfa;\\n  font-weight: 600;\\n  transition: color 0.3s ease;\\n}\\nnav li:hover {\\n  color: #f472b6;\\n}\\nnav li.selected {\\n  color: #f472b6;\\n  border-bottom: 2px solid #f472b6;\\n}\\n\\n/* === main container === */\\n.mainContainer {\\n  padding: 2rem;\\n  max-width: 1200px;\\n  margin: auto;\\n}\\n\\n/* === project grid === */\\n.projectGrid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, 200px);\\n  justify-content: center;\\n  gap: 10px;\\n}\\n\\n#addProjectDiv {\\n  display: grid;\\n  justify-content: center;\\n  padding: 25px;\\n}\\n\\n/* center dialog boxes on window, replaces former #addProjectDialog, #addTaskDialog, and #editTaskDialog */\\ndialog {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  margin: 0;\\n  padding: 2rem;\\n  max-width: 500px;\\n  color: #f3f4f6;\\n  border-radius: 12px;\\n  background: rgba(30, 27, 52, 0.85);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(167, 139, 250, 0.2);\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);\\n  animation: fadeIn 0.3s ease;\\n  z-index: 1000;\\n  max-height: 90vh;\\n  overflow-y: auto;\\n  pointer-events: auto;\\n}\\n\\n/* === project card === */\\n.projectCard {\\n  background: #1e1b34;\\n  border: 1px solid #3a3a52;\\n  border-radius: 12px;\\n  padding: 1rem;\\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\\n  box-shadow: 0 8px 16px rgba(0,0,0,0.2);\\n  cursor: pointer;\\n}\\n.projectCard:hover {\\n  transform: translateY(-3px);\\n  box-shadow: 0 12px 24px rgba(0,0,0,0.3);\\n}\\n.projectCard h3 {\\n  font-size: 1.2rem;\\n  color: #a78bfa;\\n}\\n.projectCard p {\\n  font-size: 0.90rem;\\n  padding: 3px;\\n}\\n.projectCardBody strong {\\n  color: #f472b6;\\n}\\n/* ensure text inside the card is left-aligned and \\ndoes not stretch beyond its container */\\n.projectCard h3,\\n.projectCard p {\\n  margin: 0;\\n  text-align: left;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  width: 100%;\\n}\\n/* priority badge */\\n.priorityTag {\\n  display: inline-block;\\n  padding: 0.3rem 0.7rem;\\n  border-radius: 20px;\\n  font-size: 0.85rem;\\n  font-weight: bold;\\n  color: white;\\n}\\n.priority-low { background: #3b82f6; }\\n.priority-medium { background: #facc15; color: #1e1b34; }\\n.priority-high { background: #f97316; }\\n.priority-urgent { background: #ef4444; }\\n\\n/* === buttons === */\\n#openAddProject {\\n  background: #a78bfa;\\n  color: #fff;\\n  border: none;\\n  padding: 0.6rem 1.2rem;\\n  border-radius: 6px;\\n  font-size: 1.1rem;\\n  cursor: pointer;\\n  transition: background 0.3s ease;\\n}\\n#openAddProject:hover {\\n  background: #c084fc;\\n}\\n\\n/* === delete button on cards === */\\n#deleteProject {\\n  display: flex;\\n  background: transparent;\\n  border: 1px solid #f87171;\\n  color: #f87171;\\n  font-size: 1rem;\\n  font-weight: bolder;\\n  cursor: pointer;\\n  transition: transform 0.2s ease;\\n  padding-top: 2px;\\n  border-radius: 25%;\\n  width: 24px;\\n  height: 24px;\\n}\\n#deleteProject:hover {\\n  transform: scale(1.1);\\n  color: #ef4444;\\n}\\n\\n/* header section (title + delete button) */\\n.projectCardHeader {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  /* make sure header stays fixed on card expansion */\\n  padding-bottom: 10px;\\n  top: 0;\\n  z-index: 5;\\n}\\n\\n/* prevent overlap of title with delete button */\\n.projectCardHeader h3 {\\n  max-width: 80%;\\n}\\n\\n/* === modal form layout === */\\ndialog form {\\n  display: flex;\\n  flex-direction: column;\\n}\\ndialog label {\\n  font-weight: 600;\\n  font-size: 0.95rem;\\n  color: #a78bfa;\\n}\\ndialog input, dialog textarea, dialog select {\\n  padding: 0.6rem 1rem;\\n  background: #2a2645;\\n  border: 1px solid #3a3a52;\\n  border-radius: 8px;\\n  color: #f3f4f6;\\n  font-size: 1rem;\\n  transition: border-color 0.3s;\\n}\\ndialog input:focus, dialog textarea:focus, dialog select:focus {\\n  border-color: #c084fc;\\n  outline: none;\\n}\\n\\n/* project modal spacing */\\n#addProjectForm input, select {\\n  margin-bottom: 10px;\\n}\\n/* add task and edit task modal spacing */\\n#addTaskForm input, #addTaskForm select, #addTaskForm textarea,\\n#editTaskForm input, #editTaskForm select, #editTaskForm textarea {\\n  margin-bottom: 10px;\\n}\\n\\n/* === modal buttons === */\\ndialog .buttonDiv {\\n  display: flex;\\n  justify-content: center;\\n  gap: 1rem;\\n  margin-top: 2rem;\\n}\\ndialog button {\\n  padding: 0.5rem 1rem;\\n  border-radius: 6px;\\n  border: none;\\n  cursor: pointer;\\n  font-weight: 600;\\n  font-size: 1rem;\\n}\\n#closeAddProject, #closeAddTask, #closeEditTask {\\n  background: #2d2d42;\\n  color: #f3f4f6;\\n}\\n#closeAddProject:hover, #closeAddTask:hover, #closeEditTask:hover {\\n  background: #26264d;\\n}\\n#submitAddProject, #submitAddTask, #submitEditTask {\\n  background: #a78bfa;\\n  color: #fff;\\n}\\n#submitAddProject:hover, #submitAddTask:hover, #submitEditTask:hover {\\n  background: #c084fc;\\n}\\n\\n/* === modal-like background effect === */\\n.modalOpen::before {\\n  content: \\\"\\\";\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 5;\\n}\\n.modalOpen {\\n  /* disable clicks on everything, inside and outside the card (reenabled specifically in .expanded below) */\\n  pointer-events: none;\\n}\\n.modalOpen #editTaskDialog {\\n  pointer-events: auto;\\n  /* above modal overlay and project card */\\n  z-index: 15;\\n}\\n\\n.projectCard.expanded {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  /* buffer card start from viewport top edge */\\n  top: 10vh;\\n  left: 50%;\\n  /* centers the card horizontally(-50%) but prevents vertical centering(0%) so it grows downward with the content */\\n  transform: translate(-50%, 0%);\\n  width: 90vw;\\n  max-width: 700px;\\n  z-index: 10;\\n  background: rgba(255, 255, 255, 0.97);\\n  color: #1e1b34;\\n  padding: 2rem;\\n  border-radius: 14px;\\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\\n  /* enable clicks on the expanded card */\\n  pointer-events: auto;\\n  /* animation transition from bottom-up */\\n  transform-origin: center top;\\n  animation: slideUpFade 0.3s ease-out;\\n  overflow-y: auto;\\n  max-height: 85vh;\\n  backdrop-filter: blur(8px);\\n  cursor: auto;\\n}\\n@keyframes slideUpFade {\\n  from {\\n    transform: translate(-50%, 20%);\\n    opacity: 0;\\n  }\\n  to {\\n    transform: translate(-50%, 0%);\\n    opacity: 1;\\n  }\\n}\\n\\n.projectCard.shrinking {\\n  animation: slideDownFade 250ms ease-in forwards;\\n  pointer-events: none;\\n}\\n/* animation transition for shrinking project card top-down */\\n@keyframes slideDownFade {\\n  0% {\\n    transform: scale(1) translate(-50%, 0%);\\n    opacity: 1;\\n  }\\n  100% {\\n    transform: scale(1) translate(-50%, 50%);\\n    opacity: 0;\\n  }\\n}\\n\\n/* OVERRIDE: prevent text truncation on expanded card*/\\n.projectCard.expanded h3,\\n.projectCard.expanded p {\\n  /* allows text wrapping */\\n  white-space: normal;\\n  /* ensures the text isn't cut off */\\n  overflow: visible;\\n  /* no ellipsis */\\n  text-overflow: clip;\\n  /* ensures long words don't overflow */\\n  word-wrap: break-word;\\n}\\n\\n.projectCardPlaceholder {\\n  /* keeps the space but hides the element */\\n  visibility: hidden;\\n  background: transparent;\\n  border: none;\\n}\\n\\n/* === style the minimize button === */\\n#minimizeProject {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-right: -50px;\\n  background: darkgrey;\\n  color: white;\\n  border: none;\\n  border-radius: 25%;\\n  width: 24px;\\n  height: 24px;\\n  font-size: 16px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  line-height: 0;\\n}\\n#minimizeProject:hover {\\n  background: grey;\\n}\\n/* hide minimize button */\\n#minimizeProject.hidden {\\n  display: none;\\n}\\n\\n/* === task related settings === */\\n.taskSection {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  padding-top: 1rem;\\n}\\n/* remove automatic indent on li items */\\n.taskSection ul {\\n  margin: 0px;\\n  padding: 0px;\\n}\\n.taskSection button#addTaskButton {\\n  background: #4f46e5;\\n  color: white;\\n  font-weight: 600;\\n  padding: 8px 14px;\\n  border-radius: 6px;\\n  margin-bottom: 1rem;\\n  cursor: pointer;\\n}\\n.taskSection button#addTaskButton:hover {\\n  background: #4338ca;\\n}\\n/* hide task section */\\n.taskSection.hidden {\\n  display: none;\\n}\\n\\n/* === add cog settings icon to task details section === */\\n.taskDetails {\\n  /* key point: this makes the child .settingsIcon absolute positioning relative to this specific div */\\n  position: relative;\\n}\\n.taskDetails p {\\n  padding-right: 1em;\\n}\\n.settingsIcon {\\n  position: absolute;\\n  top: 0.5rem;\\n  right: 0.7rem;\\n  cursor: pointer;\\n  font-size: 1.2rem;\\n  color: var(--accent);\\n  opacity: 0.6;\\n  transition: opacity 0.2s ease;\\n}\\n.settingsIcon:hover {\\n  color: #333;\\n  opacity: 1;\\n}\\n\\n/* === task list section === */\\n/* control task list select dropdown bar size */\\n#taskListSelection {\\n  max-width: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  display: inline-block;\\n}\\n.unassignedTasks h4,\\n.taskListContainer h4 {\\n  font-size: 1.6rem;\\n  margin-bottom: 1rem;\\n  color: #a78bfa;\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n}\\n.unassignedTasks h4::before {\\n  /* font awesome fa-tasks */\\n  content: \\\"\\\\f0ae\\\";\\n  font-family: \\\"Font Awesome 6 Free\\\";\\n  font-weight: 900;\\n}\\n.taskListContainer h4::before {\\n  /* font awesome fa-list */\\n  content: \\\"\\\\f022\\\"; \\n  font-family: \\\"Font Awesome 6 Free\\\";\\n  font-weight: 900;\\n}\\n.unassignedTasks.hidden {\\n  display: none;\\n}\\n.taskListContainer.hidden {\\n  display: none;\\n}\\n.taskListInputDiv.hidden {\\n  display: none;\\n}\\n\\n/* === style the new list input line inside \\\"+ New Task\\\" modal === */\\n.taskListInputDiv {\\n  margin-top: 0.5rem;\\n  display: flex;\\n  gap: 0.5rem;\\n}\\n.taskListInputDiv input {\\n  flex-grow: 1;\\n  background: #2a2645;\\n  color: #fff;\\n  border: 1px solid #555;\\n  border-radius: 6px;\\n  padding: 0.5rem 0.75rem;\\n  /* stops appearance of new task list input from stretching modal */\\n  width: 100%;\\n}\\n.taskListInputDiv button {\\n  background: #10b981;\\n  color: #fff;\\n  border: none;\\n  border-radius: 6px;\\n  font-weight: bold;\\n  height: 36px;\\n}\\n\\n/* === (with above) all task list css settings === */\\n.taskListHeader {\\n  display: flex;\\n  /* align all children to the top */\\n  align-items: flex-start;\\n  gap: 5px;\\n  width: 100%;\\n  margin-bottom: 12px;\\n  cursor: pointer;\\n}\\n/* style all task list titles */\\n.taskListHeader h5 {\\n  font-size: 1.3rem;\\n  /* create ellipsis for long titles */\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n/* when expanded, allow wrapping */\\n.taskList.expanded .taskListHeader h5 {\\n  white-space: normal;\\n  overflow: visible;\\n  text-overflow: unset;\\n  word-wrap: break-word;\\n}\\n/* adjust task list arrow to align with title */\\n.taskListHeader .taskArrow {\\n  align-self: start;\\n}\\n/* rotate arrow down when expanded (specifically for task list arrow) */\\n.taskList.expanded .taskListHeader .taskArrow {\\n  transform: rotate(90deg);\\n}\\n/* align tasks within task lists under the arrow */\\n.taskSection .taskListItems {\\n  padding-left: 27px;\\n}\\n.taskListItems.hidden {\\n  display: none;\\n}\\n\\n/* === settings for task list delete button === */\\n.deleteTaskListButton {\\n  display: flex;\\n  background: #ef4444;\\n  border: 1px solid #f87171;\\n  color: white;\\n  font-size: 1rem;\\n  font-weight: bolder;\\n  cursor: pointer;\\n  transition: transform 0.2s ease;\\n  padding-top: 2px;\\n  border-radius: 25%;\\n  width: 22px;\\n  height: 20px;\\n  margin-top: 2px;\\n  margin-right: 6px;\\n  line-height: 0.9;\\n}\\n.deleteTaskListButton:hover {\\n  transform: scale(1.1);\\n  color: white;\\n}\\n\\n/* === settings for task progress counter === */\\n.taskProgressCounter {\\n  margin-top: 8px;\\n  margin-left: auto;\\n  font-size: 0.85em;\\n  color: #555;\\n}\\n\\n/* === all task item css settings === */\\n/* entire task li gets the priority color as background, except checkbox area */\\n.taskItem {\\n  display: flex;\\n  align-items: flex-start;\\n  position: relative;\\n  margin-bottom: 8px;\\n  list-style: none;\\n  border-radius: 0.5rem;\\n  margin-bottom: 0.75rem;\\n  overflow: hidden;\\n  transition: all 0.25s ease;\\n}\\n/* priority background for each task li */\\n.taskItem[data-priority=\\\"low\\\"] .taskHeader    { background-color: #d0e7ff; }\\n.taskItem[data-priority=\\\"medium\\\"] .taskHeader { background-color: #fff3b0; }\\n.taskItem[data-priority=\\\"high\\\"] .taskHeader   { background-color: #ffd8a8; }\\n.taskItem[data-priority=\\\"urgent\\\"] .taskHeader { background-color: #ffb0b0; }\\n\\n/* header (title) stays fixed, clickable to expand */\\n.taskHeader {\\n  display: grid;\\n  grid-template-columns: 1fr auto;\\n  align-items: start;\\n  gap: 10px;\\n  padding: 8px 12px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  background-color: var(--priority-color);\\n  border-radius: 4px;\\n  position: relative;\\n}\\n.taskTitle {\\n  /* create ellipsis for long titles */\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  /* ensures long unbroken text wraps */\\n  overflow-wrap: break-word;\\n  /* breaks long words if needed */\\n  word-break: break-word;\\n}\\n/* when expanded, allow wrapping but don’t shift the arrow */\\n.taskItem.expanded .taskHeader {\\n  align-items: start;\\n}\\n/* when the task is expanded, remove ellipsis and allow wrapping */\\n.taskItem.expanded .taskTitle {\\n  white-space: normal;\\n  overflow: visible;\\n  text-overflow: unset;\\n  word-wrap: break-word;\\n}\\n\\n/* === task arrow settings === */\\n.taskArrow {\\n  align-self: start;\\n  font-size: 16px;\\n  min-width: 16px;\\n  text-align: center;\\n  margin-top: 2px;\\n  transition: transform 0.3s ease;\\n}\\n/* rotate arrow down when expanded */\\n.taskItem.expanded .taskHeader .taskArrow {\\n  transform: rotate(90deg);\\n}\\n\\n/* === details drawer settings === */\\n/* details drawer hidden by default */\\n.taskDetails {\\n  max-height: 0;\\n  opacity: 0;\\n  overflow: hidden;\\n  background-color: white;\\n  padding: 8px 12px;\\n  transition: all 0.3s ease;\\n  display: none;\\n}\\n/* expanded state reveals the drawer */\\n.taskItem.expanded .taskDetails {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n  padding: 1rem;\\n  border-radius: 0.5rem;\\n  background: rgba(255, 255, 255, 0.05);\\n  backdrop-filter: blur(6px);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n  animation: fadeSlideIn 0.25s ease;\\n  /* remove the height limit of the section */\\n  max-height: none;\\n  opacity: 1;\\n  /* ensures long unbroken text wraps */\\n  overflow-wrap: break-word;\\n  /* breaks long words if needed */\\n  word-break: break-word;\\n}\\n.taskItem .detailRow {\\n  display: flex;\\n  align-items: flex-start;\\n  gap: 0.75rem;\\n  font-size: 0.95rem;\\n  /* prevent description text from overlapping cog icon on smaller window*/\\n  padding-right: 10px;\\n}\\n.taskItem .detailRow i {\\n  color: var(--accent-light);\\n  margin-top: 0.1rem;\\n}\\n.taskItem .label {\\n  font-weight: 600;\\n  margin-right: 0.25rem;\\n  color: var(--text-primary);\\n}\\n.taskItem .value {\\n  color: var(--text-secondary);\\n  opacity: 0.85;\\n}\\n@keyframes fadeSlideIn {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-5px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n/* === settings for task checkbox === */\\n.taskCheckbox {\\n  margin-right: 10px;\\n  margin-top: 12px;\\n  flex-shrink: 0;\\n  cursor: pointer;\\n}\\n.taskContent {\\n  flex-grow: 1;\\n  width: 100%;\\n}\\n.taskItem.completed .taskHeader {\\n  text-decoration: line-through;\\n  opacity: 0.6;\\n}\\n.taskItem.completed .taskDetails {\\n  opacity: 0.6;\\n}\\n\\n/* === settings for task delete button === */\\n.deleteTaskButton {\\n  display: flex;\\n  background: transparent;\\n  border: 1px solid #f87171;\\n  color: #f87171;\\n  font-size: 1rem;\\n  font-weight: bolder;\\n  cursor: pointer;\\n  transition: transform 0.2s ease;\\n  padding-top: 2px;\\n  border-radius: 25%;\\n  width: 22px;\\n  height: 20px;\\n  margin-top: 8px;\\n  margin-left: 5px;\\n  margin-right: 10px;\\n  line-height: 0.9;\\n}\\n.deleteTaskButton:hover {\\n  transform: scale(1.1);\\n  color: #ef4444;\\n}\\n\\n/* === welcome modal === */\\n#welcomeModal {\\n  position: fixed;\\n  top: 35%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background: rgba(20, 18, 38, 0.92);\\n  backdrop-filter: blur(8px);\\n  border: 1px solid #3a3a52;\\n  border-radius: 12px;\\n  color: #f3f4f6;\\n  padding: 2rem;\\n  max-width: 400px;\\n  box-shadow: 0 0 30px rgba(0,0,0,0.4);\\n  z-index: 1000;\\n  animation: fadeIn 0.4s ease;\\n  text-align: center;\\n}\\n.welcomeContent h2 {\\n  margin-top: 0;\\n  color: #a78bfa;\\n}\\n.welcomeContent p {\\n  margin: 0.5rem 0;\\n  font-size: 0.95rem;\\n  line-height: 1.4;\\n}\\n\\n/* === responsive font === */\\n@media (max-width: 600px) {\\n  .projectCard {\\n    font-size: 0.9rem;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export class Project {\n    constructor(title, description, dueDate, priority) {\n        this.id = crypto.randomUUID();\n        this.title = title;\n        this.description = description;\n        this.dueDate = dueDate;\n        this.priority = priority;\n        this.projectArrayOfTaskLists = [];\n        this.projectArrayOfTaskItems = [];\n    }\n\n    addTaskList(taskList) {\n        this.projectArrayOfTaskLists.push(taskList);\n    }\n\n    removeTaskList(taskListId) {\n        // filter creates a new array (set to overwrite the prior one in this case),\n        // and is filled with elements that pass the test provided by the function\n        this.projectArrayOfTaskLists = this.projectArrayOfTaskLists.filter(arrayElement => arrayElement.id !== taskListId);\n    }\n\n    getTaskListById(taskListId) {\n        return this.projectArrayOfTaskLists.find(arrayElement => arrayElement.id === taskListId);\n    }\n\n    addTaskItem(taskItem) {\n        this.projectArrayOfTaskItems.push(taskItem);\n    }\n\n    removeTaskItem(taskItemId) {\n        this.projectArrayOfTaskItems = this.projectArrayOfTaskItems.filter(arrayElement => arrayElement.id !== taskItemId);\n    }\n\n    getTaskItemById(taskItemId) {\n        return this.projectArrayOfTaskItems.find(arrayElement => arrayElement.id === taskItemId);\n    }\n}","export class TaskList {\n    constructor(title, projectId) {\n        this.id = crypto.randomUUID();\n        this.title = title;\n        this.projectId = projectId;\n        this.taskListArrayOfTaskItems = [];\n    }\n\n    addTaskItem(taskItem) {\n        this.taskListArrayOfTaskItems.push(taskItem);\n    }\n\n    removeTaskItem(taskItemId) {\n        this.taskListArrayOfTaskItems = this.taskListArrayOfTaskItems.filter(arrayElement => arrayElement.id !== taskItemId);\n    }\n\n    getTaskItemById(taskItemId) {\n        return this.taskListArrayOfTaskItems.find(arrayElement => arrayElement.id === taskItemId);\n    }\n}","export class TaskItem {\n    // set taskListId null to create a TaskItem without specifying taskListId upfront,\n    // set notes to \"\" to allow the parameter field to be optional, if empty it will skip past it\n    constructor(title, description, dueDate, priority, notes = \"\", taskListId = null) {\n        //auto-generate unique id\n        this.id = crypto.randomUUID();\n        this.title = title;\n        this.description = description;\n        this.dueDate = dueDate;\n        this.priority = priority;\n        this.notes = notes;\n        this.taskListId = taskListId || null;\n        this.checkbox = false;\n    }\n}","import { Project } from \"./Project.js\";\nimport { TaskList } from \"./TaskList.js\";\nimport { TaskItem } from \"./TaskItem.js\";\n\nconst STORAGE_KEY = \"projectStorage\";\n\nexport const projectStorage = [];\n\n// save projectStorage to localStorage\nexport function saveToLocalStorage() {\n    const rawData = JSON.stringify(projectStorage);\n    localStorage.setItem(STORAGE_KEY, rawData);\n}\n\n// make sure date is formatted and ignores timezone offset on rebuild\nfunction formatDueDateString(dateString) {\n    const date = new Date(dateString);\n    const adjustedDate = new Date(date.getTime() + Math.abs(date.getTimezoneOffset()) * 60000);\n    return adjustedDate.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n    });\n}\n\n// load data from localStorage and populate projectStorage array\nexport function loadFromLocalStorage() {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    if (!raw) return;\n\n    try {\n        const parsed = JSON.parse(raw);\n        parsed.forEach(projectObj => {\n            // rebuild Project object\n            const project = new Project(\n                projectObj.title,\n                projectObj.description,\n                formatDueDateString(projectObj.dueDate),\n                projectObj.priority\n            );\n            project.id = projectObj.id;\n\n            // rebuild unassigned task items\n            project.projectArrayOfTaskItems = projectObj.projectArrayOfTaskItems.map(taskObj => {\n                const task = new TaskItem(\n                    taskObj.title,\n                    taskObj.description,\n                    // don't format date here so edit task modal will prefill date properly\n                    taskObj.dueDate,\n                    taskObj.priority,\n                    taskObj.notes,\n                    // taskListId will be null for unassigned tasks\n                    null\n                );\n                task.id = taskObj.id;\n                // ensure it's boolean\n                task.checkbox = !!taskObj.checkbox;\n                // add projectId explicitly\n                task.projectId = project.id;\n                return task;\n            });\n\n            // rebuild TaskLists and their TaskItems\n            project.projectArrayOfTaskLists = projectObj.projectArrayOfTaskLists.map(taskListObj => {\n                const taskList = new TaskList(taskListObj.title, taskListObj.projectId);\n                taskList.id = taskListObj.id;\n\n                 // always initialize the array, even if empty, to preserve empty lists after refresh\n                taskList.taskListArrayOfTaskItems = [];\n\n                if (Array.isArray(taskListObj.taskListArrayOfTaskItems)) {\n                    taskList.taskListArrayOfTaskItems = taskListObj.taskListArrayOfTaskItems.map(taskObj => {\n                        const task = new TaskItem(\n                            taskObj.title,\n                            taskObj.description,\n                            // don't format date here so edit task modal will prefill date properly\n                            taskObj.dueDate,\n                            taskObj.priority,\n                            taskObj.notes,\n                            // set taskListId\n                            taskList.id\n                        );\n                        task.id = taskObj.id;\n                        task.checkbox = !!taskObj.checkbox;\n                        task.projectId = project.id;\n                        return task;\n                    });\n                }\n                    return taskList;\n                });\n\n            // push the fully reconstructed project into storage\n            projectStorage.push(project);\n        });\n\n    } catch (error) {\n        console.error(\"Failed to load projectStorage from localStorage:\", error);\n    }\n}\n","export function createProjectCard(title, description, dueDate, priority, projectId) {\n    // select card creation space\n    const domContent = document.querySelector(\"#content\");\n\n    // create card\n    const card = document.createElement(\"div\");\n    card.classList.add(\"projectCard\");\n    // store project id of created card in dataset\n    card.dataset.projectId = projectId;\n\n    // change the date format for card Due Date\n    const formattedDate = new Date(dueDate).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n    });\n\n    // add project details to card\n    card.innerHTML = `\n        <div class=\"projectCardHeader\">\n            <h3>${title}</h3>\n            <button class=\"hidden\" id=\"minimizeProject\">_</button>\n            <button id=\"deleteProject\">x</button>\n        </div>\n\n        <div class=\"projectCardBody\">\n            <p>${description}</p>\n            <p><strong>Due Date:</strong> ${formattedDate}</p>\n            <p><strong>Priority:</strong>\n            <span class=\"priorityTag priority-${priority.toLowerCase()}\">\n                ${priority}\n            </span></p>\n        </div>\n\n        <div class=\"taskSection hidden\">\n            <button id=\"addTaskButton\">+ New Task</button>\n            <div class=\"unassignedTasks hidden\">\n                <h4>Unassigned Tasks</h4>\n                <ul class=\"unassignedTaskGroup\"></ul>\n            </div>\n            <div class=\"taskListContainer hidden\">\n                <h4>Task List</h4>\n            </div>\n        </div>\n    `;\n    \n    domContent.appendChild(card);\n}","import { TaskItem } from \"../models/TaskItem\";\nimport { addTaskItemToTaskList } from \"./taskListController.js\";\nimport { addTaskItemToProject } from \"./projectController.js\";\n\nexport function createTaskItem(title, description, dueDate, priority, notes, projectId, taskListId = null) {\n    const newTaskItem = new TaskItem(title, description, dueDate, priority, notes, taskListId);\n    // if a taskListId is provided, add to the TaskList, else add directly to the Project.\n    if (taskListId) {\n        addTaskItemToTaskList(taskListId, newTaskItem);\n    } else {\n        addTaskItemToProject(projectId, newTaskItem);\n    }\n\n    return newTaskItem;\n}","import { TaskList } from \"../models/TaskList.js\";\nimport { addTaskListToProject } from \"./projectController.js\";\nimport { projectStorage, saveToLocalStorage } from \"../models/projectStorage.js\";\n\nexport function createTaskList(title, projectId) {\n    const newTaskList = new TaskList(title, projectId);\n    addTaskListToProject(projectId, newTaskList);\n    return newTaskList;\n}\n\nexport function addTaskItemToTaskList(taskListId, taskItem) {\n    for (const project of projectStorage) {\n        // utilize Project class method\n        const taskList = project.getTaskListById(taskListId);\n        if (taskList) {\n            // utilize TaskList class method\n            taskList.addTaskItem(taskItem);\n            saveToLocalStorage();\n            console.log(`Task Item \"${taskItem.title}\" added to Task List: \"${taskList.title}\".`);\n            return;\n        }\n    }\n    // else\n    console.log(`Task List with ID ${taskListId} not found.`);\n}\n\nexport function removeTaskItemFromTaskList(taskListId, taskItemId) {\n    for (const project of projectStorage) {\n        const taskList = project.projectArrayOfTaskLists.find((arrayElement) => arrayElement.id === taskListId);\n        if (taskList) {\n            const taskItem = taskList.taskListArrayOfTaskItems.find((arrayElementTaskItem) => arrayElementTaskItem.id === taskItemId);\n            if (taskItem) {\n                // utilize TaskList class method\n                taskList.removeTaskItem(taskItemId);\n                saveToLocalStorage();\n                console.log(`Task Item with ID \"${taskItemId}\" removed from Task List: \"${taskList.title}\".`);\n            } else {\n                console.log(`Task Item with ID \"${taskItemId}\" not found in Task List \"${taskList.title}\".`);\n            }\n            return;\n        }\n    }\n    // else\n    console.log(`Task List with ID ${taskListId} not found.`);\n}","import { Project } from \"../models/Project.js\";\nimport { projectStorage, saveToLocalStorage } from \"../models/projectStorage.js\";\n\nexport function createProject(title, description, dueDate, priority) {\n    const newProject = new Project(title, description, dueDate, priority);\n    projectStorage.push(newProject);\n    saveToLocalStorage();\n    console.log(`Project \"${title}\" created.`);\n    return newProject;\n}\n\nexport function addTaskListToProject(projectId, taskList) {\n    const project = projectStorage.find((arrayElement) => arrayElement.id === projectId);\n    if (project) {\n        // utilize Project class method\n        project.addTaskList(taskList);\n        saveToLocalStorage();\n        console.log(`Task List \"${taskList.title}\" added to Project: \"${project.title}\".`);\n    } else {\n        console.log(`Project with ID ${projectId} not found.`);\n    }\n}\n\nexport function removeTaskListFromProject(taskList) {\n    // .some() is an array method that checks if at least one element in the array meets the provided condition, returns true/false\n    // .find()+.some() iterates over each taskList inside each project's projectArrayOfTaskLists, checks if any TaskList has an id\n    // matching taskListId, and if so, returns that project object\n    const project = projectStorage.find((arrayElement) => arrayElement.projectArrayOfTaskLists.some((arrayElementTaskList) => arrayElementTaskList.id === taskList.id));\n    if (project) {\n        // utilize Project class method\n        project.removeTaskList(taskList.id);\n        saveToLocalStorage();\n        console.log(`Task List \"${taskList.title}\" removed from Project: \"${project.title}\".`);\n    } else {\n        console.log(`Task List with ID \"${taskList.id}\" not found.`);\n    }\n}\n\nexport function addTaskItemToProject(projectId, taskItem) {\n    const project = projectStorage.find(arrayElement => arrayElement.id === projectId);\n    if (project) {\n        project.addTaskItem(taskItem);\n        saveToLocalStorage();\n        console.log(`Task Item \"${taskItem.title}\" added to Project: \"${project.title}\".`);\n    } else {\n        console.log(`Project with ID ${projectId} not found.`);\n    }\n}\n\nexport function removeTaskItemFromProject(projectId, taskItemId) {\n    const project = projectStorage.find(arrayElement => arrayElement.id === projectId);\n    if (project) {\n        project.removeTaskItem(taskItemId);\n        saveToLocalStorage();\n        console.log(`Task Item with ID \"${taskItemId}\" removed from Project: \"${project.title}\".`);\n    } else {\n        console.log(`Project with ID ${projectId} not found.`);\n    }\n}\n\nexport function viewAllProjects() {\n    projectStorage.forEach((arrayElementProject) => {\n        \n        // show the project\n        console.log(`Project: ${arrayElementProject.title}`);\n\n         // show unassigned task items (not inside a TaskList)\n        if (arrayElementProject.projectArrayOfTaskItems.length > 0) {\n            console.log(\"   Unassigned Tasks:\");\n            arrayElementProject.projectArrayOfTaskItems.forEach((arrayElementTaskItem) => {\n                console.log(`       Task: ${arrayElementTaskItem.title} | Due: ${arrayElementTaskItem.dueDate}`);\n            });\n        }\n\n        // show task lists and their task items\n        arrayElementProject.projectArrayOfTaskLists.forEach((arrayElementTaskList) => {\n            console.log(`   Task List: ${arrayElementTaskList.title}`);\n\n            arrayElementTaskList.taskListArrayOfTaskItems.forEach((arrayElementTaskItem) => {\n                console.log(`       Task: ${arrayElementTaskItem.title} | Due: ${arrayElementTaskItem.dueDate}`);\n            });\n        });\n\n    });\n}\n\nexport function deleteProject(projectId) {\n    const index = projectStorage.findIndex(arrayElement => arrayElement.id === projectId);\n    if (index !== -1) {\n        projectStorage.splice(index, 1);\n        saveToLocalStorage();\n        console.log(`Project with ID \"${projectId}\" deleted.`);\n    } else {\n        console.log(`Project with ID \"${projectId}\" not found.`);\n    }\n}","import { createTaskList, removeTaskItemFromTaskList } from \"../controllers/taskListController.js\";\nimport { removeTaskItemFromProject, removeTaskListFromProject } from \"../controllers/projectController.js\";\nimport { saveToLocalStorage, projectStorage } from \"../models/projectStorage.js\";\n\nexport function createTaskItemElement(taskItem) {\n    const taskElement = document.createElement(\"li\");\n    taskElement.classList.add(\"taskItem\");\n    taskElement.dataset.taskItemId = taskItem.id;\n    taskElement.dataset.priority = taskItem.priority;\n    \n    // create delete button for task deletion\n    const deleteButton = document.createElement(\"button\");\n    deleteButton.classList.add(\"deleteTaskButton\");\n    deleteButton.textContent = \"x\";\n\n    // prevent click from toggling the dropdown\n    deleteButton.addEventListener(\"click\", (e) => {\n        e.stopPropagation();\n        let projectId = taskItem.projectId;\n\n        // fallback; if not defined (from localStorage object), recover from DOM\n        if (!projectId) {\n            const taskElement = e.target.closest(\".taskItem\");\n            const projectCard = taskElement.closest(\".projectCard\");\n            if (projectCard) {\n                projectId = projectCard?.dataset?.projectId;\n                // recover and set\n                taskItem.projectId = projectId;\n            }\n        }\n        if (!projectId) {\n            console.error(\"Missing projectId for taskItem during delete.\");\n            return;\n        }\n\n        if (taskItem.taskListId && taskItem.taskListId !== \"none\") {\n            // call the controller.js function to delete this task\n            // assigned to task list\n            removeTaskItemFromTaskList(taskItem.taskListId, taskItem.id);\n        } else {\n            // unassigned task\n            removeTaskItemFromProject(projectId, taskItem.id);\n        }\n\n        saveToLocalStorage();\n\n        // remove from DOM\n        taskElement.remove();\n\n        // update the task progress count\n        updateTaskProgressStatus(taskItem.taskListId);\n\n        // check if any tasks exist, otherwise remove section header\n        updateUnassignedTasksVisibility(projectId);\n    });\n\n    // create checkbox for task completion\n    const checkbox = document.createElement(\"input\");\n    checkbox.type = \"checkbox\";\n    checkbox.classList.add(\"taskCheckbox\");\n    // reflect current checkbox state\n    checkbox.checked = taskItem.checkbox;\n\n    // make sure that if a task is checked, it will have styling applied even after page reload\n    if (taskItem.checkbox) {\n        taskElement.classList.add(\"completed\");\n    }\n\n    // prevent checkbox click from toggling dropdown\n    checkbox.addEventListener(\"click\", (e) => {\n        // stop bubbling to taskHeader click\n        e.stopPropagation();\n        // directly toggle here instead of old internal TaskItem.js method because you are no longer passing a class instance of TaskItem into createTaskItemElement, but instead a plain object (possibly from localStorage, a JSON parse, or constructed differently)\n        taskItem.checkbox = !taskItem.checkbox;\n        checkbox.checked = taskItem.checkbox;\n        // add class \"completed\" to checked box\n        taskElement.classList.toggle(\"completed\", taskItem.checkbox);\n\n        // update the task progress count\n        updateTaskProgressStatus(taskItem.taskListId);\n\n        saveToLocalStorage();\n    });\n\n    // create taskContent container\n    const taskContent = document.createElement(\"div\");\n    taskContent.classList.add(\"taskContent\");\n\n    // task header (always visible, colored)\n    const taskHeader = document.createElement(\"div\");\n    taskHeader.classList.add(\"taskHeader\");\n    \n    const titleSpan = document.createElement(\"span\");\n    titleSpan.classList.add(\"taskTitle\");\n    titleSpan.textContent = taskItem.title;\n\n    // an arrow indicating if the drawer is open or closed\n    const arrow = document.createElement(\"span\");\n    arrow.classList.add(\"taskArrow\");\n    // right-pointing triangle (▶)\n    arrow.innerHTML = \"&#9654;\";\n    \n    taskHeader.appendChild(titleSpan);\n    taskHeader.appendChild(arrow);\n\n    // make sure date is formatted and ignores timezone offset\n    function formatDate(input) {\n        if (!input || typeof input !== \"string\") return input;\n\n        // expect input format \"YYYY-MM-DD\"\n        const [year, month, day] = input.split(\"-\");\n        if (!year || !month || !day) return input;\n\n        // create a Date object in local time (note: month is 0-based)\n        const date = new Date(Number(year), Number(month) - 1, Number(day));\n\n        const formattedMonth = String(date.getMonth() + 1).padStart(2, \"0\");\n        const formattedDay = String(date.getDate()).padStart(2, \"0\");\n        const formattedYear = date.getFullYear();\n\n        return `${formattedMonth}/${formattedDay}/${formattedYear}`;\n        }\n    const formattedDueDate = formatDate(taskItem.dueDate);\n\n    // hidden details drawer (initially collapsed)\n    const taskDetails = document.createElement(\"div\");\n    taskDetails.classList.add(\"taskDetails\");\n    taskDetails.innerHTML = `\n        <span class=\"settingsIcon\">⚙</span>\n        <div class=\"detailRow\">\n        <i class=\"fa-solid fa-align-left\"></i>\n        <div><span class=\"label\">Description:</span><span class=\"value\">${taskItem.description}</span></div>\n        </div>\n        <div class=\"detailRow\">\n            <i class=\"fa-solid fa-calendar-days\"></i>\n            <div><span class=\"label\">Due Date:</span><span class=\"value\">${formattedDueDate}</span></div>\n        </div>\n        <div class=\"detailRow\">\n            <i class=\"fa-solid fa-flag\"></i>\n            <div><span class=\"label\">Priority:</span>\n                <span class=\"priorityTag ${`priority-${taskItem.priority.toLowerCase()}`}\">${taskItem.priority}</span>\n            </div>\n        </div>\n        <div class=\"detailRow\">\n            <i class=\"fa-solid fa-note-sticky\"></i>\n            <div><span class=\"label\">Notes:</span><span class=\"value\">${taskItem.notes}</span></div>\n        </div>\n    `;\n    \n    taskContent.appendChild(taskHeader);\n    taskContent.appendChild(taskDetails);\n    // delete button and checkbox outside content\n    taskElement.appendChild(deleteButton);\n    taskElement.appendChild(checkbox);\n    // taskContent holds header/details\n    taskElement.appendChild(taskContent);\n\n     // click expands/collapses the drawer\n     taskHeader.addEventListener(\"click\", () => {\n        taskElement.classList.toggle(\"expanded\");\n    });\n\n    // select cog button\n    const settingsIcon = taskDetails.querySelector(\".settingsIcon\");\n\n    // click on cog opens editing dialog modal\n    settingsIcon.addEventListener(\"click\", (e) => {\n        // prevent expanding/collapsing\n        e.stopPropagation();\n\n        // fill in current task details as placeholder text\n        document.querySelector(\"#editTaskTitle\").value = taskItem.title;\n        document.querySelector(\"#editTaskDescription\").value = taskItem.description;\n        document.querySelector(\"#editTaskDueDate\").value = taskItem.dueDate;\n        document.querySelector(\"#editTaskPriority\").value = taskItem.priority;\n        document.querySelector(\"#editTaskNotes\").value = taskItem.notes || \"\";\n      \n        // store reference to task object or element if needed for submission\n        editTaskDialog.dataset.taskId = taskItem.id;\n      \n        // show the modal\n        document.querySelector(\"#editTaskDialog\").showModal();\n      });\n    \n    return taskElement;\n}\n\nexport function createTaskListElement(taskListId, taskListTitle) {\n    // create the task list container\n    const taskListContainer = document.createElement(\"div\");\n    taskListContainer.classList.add(\"taskList\");\n    taskListContainer.dataset.taskListId = taskListId;\n\n    // create the clickable header wrapper\n    const taskListHeader = document.createElement(\"div\");\n    taskListHeader.classList.add(\"taskListHeader\");\n\n    // create delete button for the task list\n    const deleteListButton = document.createElement(\"button\");\n    deleteListButton.classList.add(\"deleteTaskListButton\");\n    deleteListButton.textContent = \"x\";\n\n    // prevent click from toggling the dropdown\n    deleteListButton.addEventListener(\"click\", (e) => {\n        e.stopPropagation();\n        // confirm before delete\n        const confirmed = confirm(\"Delete this task list and all its associated tasks?\");\n        if (!confirmed) return;\n\n        const taskListId = taskListContainer.dataset.taskListId;\n\n        // find the related project\n        const projectCard = taskListContainer.closest(\".projectCard\");\n        const projectId = projectCard.dataset.projectId;\n        const project = projectStorage.find(p => p.id === projectId);\n        const taskList = project?.getTaskListById(taskListId);\n\n        if (taskList) {\n            // call the controller.js function to delete this task\n            // pass full object\n            removeTaskListFromProject(taskList);\n            saveToLocalStorage();\n        } else {\n            console.warn(`Could not find task list with ID ${taskListId} for deletion.`);\n        }\n\n        // remove from DOM\n        taskListContainer.remove();\n\n        // check if any task lists exist, otherwise remove section header\n        updateTaskListVisibility(projectId);\n    });\n\n    // create an arrow indicating open/closed\n    const arrow = document.createElement(\"span\");\n    arrow.classList.add(\"taskArrow\");\n    // right-pointing triangle (▶)\n    arrow.innerHTML = \"&#9654;\";\n\n    // create the title element\n    const title = document.createElement(\"h5\");\n    title.textContent = taskListTitle;\n\n    // create task progress tracker\n    const taskProgress = document.createElement(\"div\");\n    taskProgress.classList.add(\"taskProgressCounter\");\n    taskProgress.dataset.taskListId = taskListId;\n    taskProgress.textContent = \"Tasks Remaining: 0 of 0\";\n\n    taskListHeader.appendChild(deleteListButton);\n    taskListHeader.appendChild(arrow);\n    taskListHeader.appendChild(title);\n    taskListHeader.appendChild(taskProgress);\n    taskListContainer.appendChild(taskListHeader);\n\n    // create the ul of tasks and hide it initially\n    const taskListUL = document.createElement(\"ul\");\n    taskListUL.classList.add(\"taskListItems\");\n    taskListUL.classList.add(\"hidden\");\n    taskListContainer.appendChild(taskListUL);\n\n    // toggle expansion on click\n    taskListHeader.addEventListener(\"click\", () => {\n        taskListContainer.classList.toggle(\"expanded\");\n        taskListUL.classList.toggle(\"hidden\");\n});\n\n    return taskListContainer;\n}\n\nexport function addTaskToUI(taskItem, projectId, taskListId, taskListTitle) {\n    const projectCard = document.querySelector(`.projectCard[data-project-id=\"${projectId}\"]`);\n    if (!projectCard) return;\n\n    const taskElement = createTaskItemElement(taskItem);\n\n    if (taskListId && taskListId !== \"none\") {\n        // look for existing taskList container\n        let taskListContainer = projectCard.querySelector(`.taskList[data-task-list-id=\"${taskListId}\"]`);\n\n        if (!taskListContainer) {\n            // create and append it if it doesn't exist yet\n            taskListContainer = createTaskListElement(taskListId, taskListTitle);\n            const listSection = projectCard.querySelector(\".taskListContainer\");\n            listSection.classList.remove(\"hidden\");\n            listSection.appendChild(taskListContainer);\n        }\n\n        const taskListUL = taskListContainer.querySelector(\"ul\");\n        taskListUL.appendChild(taskElement);\n\n        // update task progress after appending\n        updateTaskProgressStatus(taskListId);\n    } else {\n        // if no list selected or 'None' was selected\n        const unassignedTaskGroup = projectCard.querySelector(\".unassignedTaskGroup\");\n        const unassignedTaskContainer = projectCard.querySelector(\".unassignedTasks\");\n\n        if (unassignedTaskGroup && unassignedTaskContainer) {\n            unassignedTaskGroup.appendChild(taskElement);\n            unassignedTaskContainer.classList.remove(\"hidden\");\n        }\n    }\n}\n\nexport function showTaskListInput(event) {\n    // prevent submit, page reload\n    event.preventDefault();\n\n    const taskListInputDiv = document.querySelector(\".taskListInputDiv\");\n    if (taskListInputDiv) {\n        taskListInputDiv.classList.remove(\"hidden\");\n    }\n}\n\nexport function resetTaskListInput() {\n    const addTaskDialog = document.querySelector(\"#addTaskDialog\");\n    const addTaskForm = addTaskDialog.querySelector(\"#addTaskForm\");\n    const taskListInputDiv = addTaskDialog.querySelector(\".taskListInputDiv\");\n\n    if (!taskListInputDiv) return;\n\n    // hide input field when dialog closes\n    addTaskDialog.addEventListener(\"close\", () => {\n        taskListInputDiv.classList.add(\"hidden\");\n    });\n\n    // hide input field when submitting task\n    addTaskForm.addEventListener(\"submit\", () => {\n        taskListInputDiv.classList.add(\"hidden\");\n    });\n}\n\nexport function populateTaskListDropdown(projectId) {\n    const dropdown = document.querySelector(\"#taskListSelection\");\n\n    // clear all existing options\n    dropdown.innerHTML = \"\";\n\n    // always add the default \"None\" option\n    const defaultOption = document.createElement(\"option\");\n    defaultOption.value = \"none\";\n    defaultOption.textContent = \"None (standalone task)\";\n    dropdown.appendChild(defaultOption);\n\n    // find all task lists for the current project\n    const projectCard = document.querySelector(`.projectCard[data-project-id=\"${projectId}\"]`);\n    const taskListElements = projectCard.querySelectorAll(\".taskList\");\n\n    taskListElements.forEach(taskList => {\n        const option = document.createElement(\"option\");\n        option.value = taskList.dataset.taskListId;\n        option.textContent = taskList.querySelector(\"h5\").textContent;\n        dropdown.appendChild(option);\n    });\n}\n\nexport function handleTaskListSubmission() {\n    const submitTaskListButton = document.querySelector(\"#submitTaskList\");\n\n    submitTaskListButton.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n\n        const taskListInput = document.querySelector(\"#taskListInput\");\n        const dropdown = document.querySelector(\"#taskListSelection\");\n        const title = taskListInput.value.trim();\n\n        // validate\n        if (title === \"\") {\n            alert(\"Please enter a valid Task List name.\");\n            return;\n        }\n\n        // get current project\n        const projectCard = document.querySelector(\".projectCard.expanded\");\n        const projectId = projectCard ? projectCard.dataset.projectId : null;\n\n        if (!projectId) {\n            console.error(\"No project selected to add a Task List.\");\n            return;\n        }\n\n        // create and store task list\n        const newTaskList = createTaskList(title, projectId);\n        console.log(\"Task List Created:\", newTaskList);\n\n        // immediately render it in the UI\n        renderEmptyTaskList(projectId, newTaskList.id, newTaskList.title);\n\n        // create <option> in dropdown\n        const option = document.createElement(\"option\");\n        option.value = newTaskList.id;\n        option.textContent = newTaskList.title;\n        option.selected = true;\n\n        dropdown.appendChild(option);\n\n        // reset UI\n        taskListInput.value = \"\";\n        document.querySelector(\".taskListInputDiv\").classList.add(\"hidden\");\n    });\n}\n\nexport function updateTaskById(taskId, updatedTask) {\n    // find the task element in projectStorage\n    const taskElement = document.querySelector(`.taskItem[data-task-item-id=\"${taskId}\"]`);\n    if (!taskElement) {\n        console.error(`Task with ID ${taskId} not found in the DOM.`);\n        return;\n    }\n\n      // !!!!! Optional: Update the underlying data model here, if you're storing tasks in memory !!!!!\n\n    // replace the task DOM with an updated one\n    const projectId = taskElement.closest(\".projectCard\").dataset.projectId;\n    const taskListElement = taskElement.closest(\".taskList\");\n    const taskListId = taskListElement ? taskListElement.dataset.taskListId : null;\n    const taskListTitle = taskListElement ? taskListElement.querySelector(\"h5\").textContent : null;\n\n    // remove the old element\n    taskElement.remove();\n\n    // rebuild the updated task object\n    const updatedTaskItem = {\n        id: taskId,\n        projectId: projectId,\n        // or retain previous state\n        checkbox: false,\n        // pull data from appUI.js variable\n        ...updatedTask,\n    };\n\n    // add the updated task back into the UI\n    addTaskToUI(updatedTaskItem, projectId, taskListId, taskListTitle);\n}\n\nfunction updateTaskProgressStatus(taskListId) {\n    const taskListContainer = document.querySelector(`.taskList[data-task-list-id=\"${taskListId}\"]`);\n    if (!taskListContainer) return;\n\n    const tasks = taskListContainer.querySelectorAll(\"li.taskItem\");\n    const completedTasks = taskListContainer.querySelectorAll(\"li.taskItem.completed\");\n\n    const taskProgress = taskListContainer.querySelector(\".taskProgressCounter\");\n    if (taskProgress) {\n        taskProgress.textContent = `Tasks Remaining: ${tasks.length - completedTasks.length} of ${tasks.length}`;\n    }\n}\n\nexport function updateUnassignedTasksVisibility(projectId) {\n  const projectCard = document.querySelector(`.projectCard[data-project-id=\"${projectId}\"]`);\n  if (!projectCard) return;\n\n  const unassignedList = projectCard.querySelector(\".unassignedTaskGroup\");\n  const unassignedSection = projectCard.querySelector(\".unassignedTasks\");\n\n  const hasTasks = unassignedList && unassignedList.querySelectorAll(\"li\").length > 0;\n\n  // toggle the entire section\n  unassignedSection.classList.toggle(\"hidden\", !hasTasks);\n}\n\nexport function updateTaskListVisibility(projectId) {\n  const projectCard = document.querySelector(`.projectCard[data-project-id=\"${projectId}\"]`);\n  if (!projectCard) return;\n\n  const taskListContainer = projectCard.querySelector(\".taskListContainer\");\n  const hasTaskLists = taskListContainer && taskListContainer.querySelectorAll(\".taskList\").length > 0;\n\n  taskListContainer.classList.toggle(\"hidden\", !hasTaskLists);\n}\n\nexport function renderEmptyTaskList(projectId, taskListId, taskListTitle) {\n    const projectCard = document.querySelector(`.projectCard[data-project-id=\"${projectId}\"]`);\n    if (!projectCard) return;\n\n    const taskListContainer = projectCard.querySelector(\".taskListContainer\");\n\n    // only add it if it doesn't already exist\n    if (!taskListContainer.querySelector(`.taskList[data-task-list-id=\"${taskListId}\"]`)) {\n        const taskListElement = createTaskListElement(taskListId, taskListTitle);\n        taskListContainer.classList.remove(\"hidden\");\n        taskListContainer.appendChild(taskListElement);\n    }\n}","import { createProject, viewAllProjects } from \"../controllers/projectController.js\";\nimport { projectStorage } from \"../models/projectStorage.js\";\nimport { createProjectCard } from \"./cardGenerator.js\";\nimport { createTaskItem } from \"../controllers/taskItemController.js\";\nimport { addTaskToUI } from \"./taskGenerator.js\";\nimport { checkIfNoProjects } from \"../index.js\";\n\nexport function projectFormSubmission(event) {\n    // prevent page reload on submit\n    event.preventDefault();\n\n    const addProjectDialog = document.querySelector(\"#addProjectDialog\"); \n    const addProjectForm = addProjectDialog.querySelector(\"#addProjectForm\");\n    const formData = new FormData(addProjectForm);\n\n    // run form validation before proceeding\n    // if any input is empty, form.checkValidity() will return false, !false = true and thus the code block will execute\n    if (!addProjectForm.checkValidity()) {\n        // trigger browser's validation messages\n        addProjectForm.reportValidity();\n        // stop execution if any field is empty\n        return;\n    }\n\n    // use FormData instead of querySelector to extract values\n    const title = formData.get(\"title\");\n    const description = formData.get(\"description\");\n\n    // fix timezone offset to ensure date selected in modal matches card display\n    const dueDateString = formData.get(\"dueDate\");\n    const dueDate = parseDateFromInput(dueDateString);\n    function parseDateFromInput(inputDateString) {\n        const [year, month, day] = inputDateString.split(\"-\").map(Number);\n        // month is 0-indexed\n        return new Date(year, month - 1, day);\n    }\n\n    const priority = formData.get(\"priority\");\n\n    // correctly assigns newProject\n    const newProject = createProject(title, description, dueDate, priority);\n    // check that the project has an id\n    console.log(\"Project Created:\", newProject);\n\n    viewAllProjects();\n    // view table of all current project data stored\n    console.table(projectStorage);\n\n    // generate a UI card, collect project id from newProject object\n    createProjectCard(title, description, dueDate, priority, newProject.id);\n    \n    addProjectDialog.close();\n\n    checkIfNoProjects();\n}\n\nexport function taskFormSubmission(event) {\n    event.preventDefault();\n\n    const addTaskDialog = document.querySelector(\"#addTaskDialog\");\n    const addTaskForm = document.querySelector(\"#addTaskForm\");\n    const formData = new FormData(addTaskForm);\n\n    if (!addTaskForm.checkValidity()) {\n        addTaskForm.reportValidity();\n        return;\n    }\n\n    const title = formData.get(\"title\");\n    const description = formData.get(\"description\");\n    const dueDate = formData.get(\"dueDate\");\n    const priority = formData.get(\"priority\");\n    const notes = formData.get(\"notes\");\n\n    // get project ID from expanded card\n    const projectCard = document.querySelector(\".projectCard.expanded\");\n    const projectId = projectCard ? projectCard.dataset.projectId : null;\n    if (!projectId) {\n        console.error(\"Error: No project is currently selected to add the task.\");\n        return;\n    }\n\n    // get dropdown selection\n    const selectElement = document.querySelector(\"#taskListSelection\");\n    const selectedOption = selectElement.options[selectElement.selectedIndex];\n    const taskListId = selectedOption.value !== \"none\" ? selectedOption.value : null;\n    const taskListTitle = selectedOption.textContent;\n\n    // handle unassigned task\n    if (!taskListId) {\n        const newTaskItem = createTaskItem(title, description, dueDate, priority, notes, projectId, null);\n        // unassigned\n        addTaskToUI(newTaskItem, projectId, null);\n    } else {\n        // add task to the existing or new task list\n        const newTaskItem = createTaskItem(title, description, dueDate, priority, notes, projectId, taskListId);\n        addTaskToUI(newTaskItem, projectId, taskListId, taskListTitle);\n    }\n\n    addTaskDialog.close();\n}","import \"./style.css\";\nimport \"./views/appUI.js\";\nimport { createProject, deleteProject, removeTaskListFromProject, \n         removeTaskItemFromProject, viewAllProjects } from \"./controllers/projectController.js\";\nimport { createTaskList, removeTaskItemFromTaskList } from \"./controllers/taskListController.js\";\nimport { createTaskItem } from \"./controllers/taskItemController.js\";\nimport { createProjectCard } from \"./views/cardGenerator.js\";\n\n// checks content section for project cards, if none exist, display instructions pop up\nexport function checkIfNoProjects() {\n  const projectContainer = document.getElementById(\"content\");\n  const welcomeModal = document.getElementById(\"welcomeModal\");\n\n  if (!projectContainer || !welcomeModal) return;\n\n  const hasProjects = projectContainer.querySelectorAll(\".projectCard\").length > 0;\n  welcomeModal.style.display = hasProjects ? \"none\" : \"block\";\n}\n\n/*\n// backend functionality - test data 1\nconst project1 = createProject(\"Project 1\", \"Project description\", \"3/10/2025\", \"High\");\nconst project2 = createProject(\"Project 2\", \"Project description\", \"3/11/2025\", \"Medium\");\nconst project3 = createProject(\"Project 3\", \"Project description\", \"3/12/2025\", \"Low\");\nconst tasklist1 = createTaskList(\"Task List 1\", project1.id);\nconst tasklist2 = createTaskList(\"Task List 2\", project1.id);\nconst taskitem1 = createTaskItem(\"Task Item 1\", \"Test description\", \"3/05/2025\", \"Medium\", \"no notes\", tasklist1.id);\nconst taskitem2 = createTaskItem(\"Task Item 2\", \"Test description\", \"3/06/2025\", \"High\", \"no notes\", tasklist1.id);\nconst taskitem3 = createTaskItem(\"Task Item 1A\", \"Test description\", \"3/07/2025\", \"Low\", \"no notes\", tasklist2.id);\n\nremoveTaskItemFromTaskList(tasklist1.id, taskitem2.id);\nremoveTaskListFromProject(tasklist2);\n\ndeleteProject(project2.id);\n\nviewAllProjects();\n*/\n\n/*\n// backend functionality - test data 2\n\n// Step 1: Create Projects\nconst project1 = createProject(\"Project Alpha\", \"First project\", \"4/10/2025\", \"High\");\nconst project2 = createProject(\"Project Beta\", \"Second project\", \"4/11/2025\", \"Medium\");\n\n// Step 2: Create Task Lists inside project1\nconst tasklist1 = createTaskList(\"Task List A\", project1.id);\nconst tasklist2 = createTaskList(\"Task List B\", project1.id);\n\n// Step 3: Add Task Items to a Task List\nconst taskitem1 = createTaskItem(\"Task A1\", \"Task inside list\", \"4/05/2025\", \"Medium\", \"no notes\", project1.id, tasklist1.id);\nconst taskitem2 = createTaskItem(\"Task A2\", \"Task inside list\", \"4/06/2025\", \"High\", \"no notes\", project1.id, tasklist1.id);\n\n// Step 4: Add Task Item directly inside Project (not inside Task List)\nconst taskitem3 = createTaskItem(\"Standalone Task\", \"Task without a list\", \"4/07/2025\", \"Low\", \"no notes\", project1.id);\n\n// Step 5: Remove a Task Item from a Task List\nremoveTaskItemFromTaskList(tasklist1.id, taskitem1.id);\n\n// Step 6: Remove a Task Item directly from a Project\nremoveTaskItemFromProject(project1.id, taskitem3.id);\n\n// Step 7: Remove a Task List from a Project\nremoveTaskListFromProject(tasklist2);\n\n// Step 8: Delete an entire Project\ndeleteProject(project2.id);\n\n// Step 9: View All Projects\nviewAllProjects();\n*/\n\n\n// createProjectCard(\"title1\", \"description\", \"dueDate\", \"priority\", 1);\n// createProjectCard(\"title2\", \"description\", \"dueDate\", \"priority\", 2);\n// createProjectCard(\"title33333333333333333333333333333333\", \"descriptionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\", \"dueDate\", \"priority\", 3);\n// createProjectCard(\"title4\", \"description\", \"dueDate\", \"priority\", 4);\n// createProjectCard(\"title5\", \"description\", \"dueDate\", \"priority\", 5);\n// createProjectCard(\"title6666666666666666666666666666\", \"descriptionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\", \"dueDate\", \"priority\", 6);","import { projectFormSubmission, taskFormSubmission } from \"./formHandler.js\";\nimport { loadFromLocalStorage, projectStorage } from \"../models/projectStorage.js\";\nimport { createProjectCard } from \"./cardGenerator.js\";\nimport { toggleExpandProjectCard } from \"./projectCardHandler.js\";\nimport { showTaskListInput, resetTaskListInput, handleTaskListSubmission,\n         populateTaskListDropdown, updateTaskById, addTaskToUI, renderEmptyTaskList\n} from \"./taskGenerator.js\";\nimport { checkIfNoProjects } from \"../index.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    loadFromLocalStorage();\n    const contentArea = document.querySelector(\"#content\");\n\n    const addProjectDialog = document.querySelector(\"#addProjectDialog\");\n    const openAddProject = document.querySelector(\"#openAddProject\");\n    const closeAddProject = addProjectDialog.querySelector(\"#closeAddProject\");\n    const submitAddProject = addProjectDialog.querySelector(\"#submitAddProject\");\n    const addProjectForm = addProjectDialog.querySelector(\"#addProjectForm\");\n    \n    const addTaskDialog = document.querySelector(\"#addTaskDialog\");\n    const closeAddTask = addTaskDialog.querySelector(\"#closeAddTask\");\n    const submitAddTask = addTaskDialog.querySelector(\"#submitAddTask\");\n    const addTaskForm = addTaskDialog.querySelector(\"#addTaskForm\");\n\n    const addTaskListButton = addTaskDialog.querySelector(\"#addTaskListButton\");\n\n    const editTaskDialog = document.querySelector(\"#editTaskDialog\");\n\n    // open input modal on button click\n    openAddProject.addEventListener(\"click\", () => {\n        addProjectDialog.showModal();\n    });\n\n    // close input modal on button click\n    closeAddProject.addEventListener(\"click\", () => {\n        addProjectDialog.close();\n    });\n\n    // whenever the .close() method is run, reset the input fields\n    addProjectDialog.addEventListener(\"close\", () => {\n        if (addProjectForm) addProjectForm.reset();\n    });\n\n    // listen for addProject submit, run formHandler.js function\n    submitAddProject.addEventListener(\"click\", projectFormSubmission);\n\n    // load any saved projects in localStorage as cards, even on refresh\n    projectStorage.forEach(project => {\n        createProjectCard(\n            project.title,\n            project.description,\n            project.dueDate,\n            project.priority,\n            project.id\n        );\n\n        // render unassigned task items\n        project.projectArrayOfTaskItems.forEach(task => {\n            addTaskToUI(task, project.id, null);\n        });\n\n        // render task lists and their assigned tasks\n        project.projectArrayOfTaskLists.forEach(taskList => {\n            // always create the container even if empty\n            if (taskList.taskListArrayOfTaskItems.length === 0) {\n                renderEmptyTaskList(project.id, taskList.id, taskList.title);\n            } else {\n                taskList.taskListArrayOfTaskItems.forEach(task => {\n                    addTaskToUI(task, project.id, taskList.id, taskList.title);\n                });\n            }\n        });\n    });\n\n    // listen for project card clicks, run projectCardHandler.js function\n    // ensures that when a modal is open, clicking outside will not collapse the expanded project card\n    contentArea.addEventListener(\"click\", (event) => {\n        const anyModalOpen = document.querySelector(\"dialog[open]\");\n        if (!anyModalOpen) {\n            toggleExpandProjectCard(event);\n        }\n    });\n\n    // open input modal when clicking \"+ New Task\"\n    // #addTaskButton is dynamically added via the DOM when a project expands, must delegate the listener\n    document.addEventListener(\"click\", (event) => {\n        if (event.target && event.target.id === \"addTaskButton\") {\n             // get the current project\n            const projectCard = event.target.closest(\".projectCard\");\n            const projectId = projectCard ? projectCard.dataset.projectId : null;\n\n            if (projectId) {\n                populateTaskListDropdown(projectId);\n            }\n\n            addTaskDialog.showModal();\n            // start at top of modal when viewing on smaller window\n            addTaskDialog.scrollTop = 0;\n        }\n    });\n\n    // prevents clicks inside the modal from reaching the project card\n    addTaskDialog.addEventListener(\"click\", (event) => {\n        event.stopPropagation();\n    });\n\n    // close input modal\n    closeAddTask.addEventListener(\"click\", () => {\n        addTaskDialog.close();\n    });\n\n    // reset the form when closing modal\n    addTaskDialog.addEventListener(\"close\", () => {\n        if (addTaskForm) addTaskForm.reset();\n    });\n\n    // listen for addTask submit, run formHandler.js function\n    submitAddTask.addEventListener(\"click\", taskFormSubmission);\n\n    // listen for \"+ New List\" click inside new task modal\n    addTaskListButton.addEventListener(\"click\", showTaskListInput);\n    // re-hide task list input field after close or submit\n    resetTaskListInput();\n    handleTaskListSubmission();\n\n    // prevents clicks inside the modal from reaching the project card\n    editTaskDialog.addEventListener(\"click\", (event) => {\n        event.stopPropagation();\n    });\n\n    // listen for click to close edit task modal\n    document.querySelector(\"#closeEditTask\").addEventListener(\"click\", () => {\n        editTaskDialog.close();\n    });\n      \n    // listen for click to submit edit task modal\n    document.querySelector(\"#submitEditTask\").addEventListener(\"click\", () => {\n        // grab updated values\n        const updatedTask = {\n            title: document.querySelector(\"#editTaskTitle\").value,\n            description: document.querySelector(\"#editTaskDescription\").value,\n            dueDate: document.querySelector(\"#editTaskDueDate\").value,\n            priority: document.querySelector(\"#editTaskPriority\").value,\n            notes: document.querySelector(\"#editTaskNotes\").value,\n        };\n      \n        const taskId = editTaskDialog.dataset.taskId;\n      \n        // run taskGenerator.js function to update task object and re-render it\n        updateTaskById(taskId, updatedTask);\n      \n        editTaskDialog.close();\n      });\n\n      // should be at the very bottom of the DOMContentLoaded block\n      checkIfNoProjects();\n});","import { deleteProject } from \"../controllers/projectController.js\";\nimport { checkIfNoProjects } from \"../index.js\";\n\nexport function toggleExpandProjectCard(event) {\n    const clickedCard = event.target.closest(\".projectCard\");\n    const isDeleteButton = event.target.id === \"deleteProject\";\n    const isMinimizeButton = event.target.id === \"minimizeProject\";\n    const isExpanded = clickedCard && clickedCard.classList.contains(\"expanded\");\n\n    // ignore all clicks outside the card\n    if (!clickedCard) return;\n\n    // if delete button is clicked, delete the card\n    if (isDeleteButton) {\n        deleteCard(clickedCard);\n        return;\n    }\n    // if minimize button is clicked, shrink the card\n    if (isMinimizeButton) {\n        shrinkCard(clickedCard);\n        return;\n    }\n\n    // if the card is expanded and clicked inside, do nothing\n    if (isExpanded && !isMinimizeButton && !isDeleteButton) {\n        return;\n    }\n    // otherwise, toggle the card (expand or shrink)\n    if (isExpanded) {\n        shrinkCard(clickedCard);\n    } else {\n        expandCard(clickedCard);\n    }\n\n    function expandCard(card) {\n        // create a placeholder div to occupy the original space\n        const placeholder = document.createElement(\"div\");\n        placeholder.classList.add(\"projectCardPlaceholder\");\n        // ensure the placeholder takes up the exact same space as the original card\n        // returns the visible width/height of the card, including padding, excluding margins and scrollbars\n        placeholder.style.width = `${card.offsetWidth}px`;\n        placeholder.style.height = `${card.offsetHeight}px`;\n\n        // insert the placeholder before the card\n        // card.parentNode gets the parent container(#content)\n        // insertBefore(newElement, referenceElement), inserts newElement before referenceElement\n        card.parentNode.insertBefore(placeholder, card);\n\n        // move the card to expanded positioning\n        card.classList.add(\"expanded\");\n        document.body.classList.add(\"modalOpen\");\n        // stores a reference to the placeholder element inside the card for later removal\n        card.dataset.placeholderId = placeholder;\n        \n        // note: the following two sections need to be here at the bottom (unlike in shrinkCard below)\n        // in order to eliminate the neighboring cards stretching and resizing issue that existed\n        // show the minimize button when expanded\n        const minimizeButton = card.querySelector(\"#minimizeProject\");\n        if (minimizeButton) minimizeButton.classList.remove(\"hidden\");\n\n        // show the task section when expanded\n        const taskSection = card.querySelector(\".taskSection\");\n        if (taskSection) taskSection.classList.remove(\"hidden\");\n\n        // close card on outside click and escape key click\n        setTimeout(() => {\n            document.addEventListener(\"click\", closeOnOutsideClick);\n            document.addEventListener(\"keydown\", closeOnEscape);\n        }, 10);\n    }\n\n    function shrinkCard(card) {\n        // hide the minimize button when shrinking\n        const minimizeButton = card.querySelector(\"#minimizeProject\");\n        if (minimizeButton) minimizeButton.classList.add(\"hidden\");\n\n        // hide the task section when shrinking\n        const taskSection = card.querySelector(\".taskSection\");\n        if (taskSection) taskSection.classList.add(\"hidden\");\n\n         // collapse all expanded task items\n        const expandedTasks = card.querySelectorAll(\".taskItem.expanded\");\n        expandedTasks.forEach(task => {\n            task.classList.remove(\"expanded\");\n        });\n        \n        // collapse all expanded task lists\n        const expandedTaskLists = card.querySelectorAll(\".taskList.expanded\");\n        expandedTaskLists.forEach(taskList => {\n            taskList.classList.remove(\"expanded\");\n            const taskListUL = taskList.querySelector(\".taskListItems\");\n            if (taskListUL) taskListUL.classList.add(\"hidden\");\n        });\n\n        // trigger shrink animation\n        card.classList.add(\"shrinking\");\n\n        // wait for animation to finish\n        setTimeout(() => {\n            card.classList.remove(\"shrinking\", \"expanded\");\n            document.body.classList.remove(\"modalOpen\");\n\n            // remove the placeholder\n            const placeholder = document.querySelector(\".projectCardPlaceholder\");\n            if (placeholder) placeholder.remove();\n\n            // remove modal effects\n            card.classList.remove(\"expanded\");\n            document.body.classList.remove(\"modalOpen\");\n\n            // remove listeners\n            document.removeEventListener(\"click\", closeOnOutsideClick);\n            document.removeEventListener(\"keydown\", closeOnEscape);\n        }, 250);\n    }\n\n    function closeOnOutsideClick(event) {\n        const theExpandedCard = document.querySelector(\".expanded\");\n\n        // if there is no expanded card, do nothing\n        if (!theExpandedCard) return;\n\n        // if the clicked target is outside the expanded card, shrink it\n        if (!theExpandedCard.contains(event.target)) {\n            shrinkCard(theExpandedCard);\n        }\n    }\n\n    function closeOnEscape(event) {\n        if (event.key !== \"Escape\") return;\n\n        // check if any <dialog> is open\n        const openDialog = document.querySelector(\"dialog[open]\");\n        if (openDialog) {\n            // let the dialog handle its own escape logic\n            return;\n        }\n\n        // otherwise, close the expanded project card\n        const expandedCard = document.querySelector(\".projectCard.expanded\");\n        if (expandedCard) {\n            shrinkCard(expandedCard);\n        }\n    }\n\n    function deleteCard(card) {\n        // confirm before delete\n        const confirmed = confirm(\"Are you sure you want to delete this project and all its tasks?\");\n        if (!confirmed) return;\n\n        // remove the placeholder if the card was expanded\n        const placeholder = document.querySelector(\".projectCardPlaceholder\");\n        if (placeholder) placeholder.remove();\n\n        // remove modal effects if card was expanded\n        if (card.classList.contains(\"expanded\")) {\n            card.classList.remove(\"expanded\");\n            document.body.classList.remove(\"modalOpen\");\n            document.removeEventListener(\"click\", closeOnOutsideClick);\n        }\n        \n        // deletes from storage and saves update to localStorage\n        const projectId = card.dataset.projectId;\n        deleteProject(projectId);\n\n        // remove from DOM\n        card.remove();\n\n        checkIfNoProjects();\n    }\n}"],"names":["module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","___CSS_LOADER_EXPORT___","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","locals","Project","constructor","title","description","dueDate","priority","crypto","randomUUID","projectArrayOfTaskLists","projectArrayOfTaskItems","addTaskList","taskList","removeTaskList","taskListId","filter","arrayElement","getTaskListById","find","addTaskItem","taskItem","removeTaskItem","taskItemId","getTaskItemById","TaskList","projectId","taskListArrayOfTaskItems","TaskItem","notes","checkbox","STORAGE_KEY","projectStorage","saveToLocalStorage","rawData","localStorage","setItem","createProjectCard","domContent","card","classList","add","dataset","formattedDate","Date","toLocaleDateString","year","month","day","innerHTML","toLowerCase","createTaskItem","newTaskItem","project","console","log","addTaskItemToTaskList","addTaskItemToProject","createTaskListElement","taskListTitle","taskListContainer","taskListHeader","deleteListButton","textContent","addEventListener","stopPropagation","confirm","closest","p","some","arrayElementTaskList","removeTaskListFromProject","warn","projectCard","hasTaskLists","querySelectorAll","toggle","updateTaskListVisibility","arrow","taskProgress","taskListUL","addTaskToUI","taskElement","deleteButton","arrayElementTaskItem","removeTaskItemFromTaskList","removeTaskItemFromProject","updateTaskProgressStatus","unassignedList","unassignedSection","hasTasks","updateUnassignedTasksVisibility","error","type","checked","taskContent","taskHeader","titleSpan","formattedDueDate","input","split","date","Number","String","getMonth","padStart","getDate","getFullYear","formatDate","taskDetails","value","editTaskDialog","taskId","showModal","createTaskItemElement","listSection","unassignedTaskGroup","unassignedTaskContainer","showTaskListInput","event","preventDefault","taskListInputDiv","tasks","completedTasks","renderEmptyTaskList","taskListElement","projectFormSubmission","addProjectDialog","addProjectForm","formData","FormData","checkValidity","reportValidity","inputDateString","parseDateFromInput","newProject","createProject","forEach","arrayElementProject","table","close","checkIfNoProjects","taskFormSubmission","addTaskDialog","addTaskForm","selectElement","selectedOption","selectedIndex","projectContainer","getElementById","welcomeModal","hasProjects","display","raw","getItem","parse","projectObj","dateString","getTime","Math","abs","getTimezoneOffset","formatDueDateString","taskObj","task","taskListObj","Array","isArray","loadFromLocalStorage","contentArea","openAddProject","closeAddProject","submitAddProject","closeAddTask","submitAddTask","addTaskListButton","reset","clickedCard","isDeleteButton","isMinimizeButton","isExpanded","contains","shrinkCard","minimizeButton","taskSection","setTimeout","body","placeholder","removeEventListener","closeOnOutsideClick","closeOnEscape","theExpandedCard","expandedCard","findIndex","deleteProject","deleteCard","width","offsetWidth","height","offsetHeight","insertBefore","placeholderId","expandCard","toggleExpandProjectCard","dropdown","defaultOption","option","populateTaskListDropdown","scrollTop","resetTaskListInput","taskListInput","trim","alert","newTaskList","addTaskListToProject","createTaskList","selected","updatedTask","updateTaskById"],"sourceRoot":""}